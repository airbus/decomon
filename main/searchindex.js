Search.setIndex({"docnames": ["api/decomon", "api/decomon.applications", "api/decomon.applications.cv", "api/decomon.backward_layers", "api/decomon.corners", "api/decomon.layers", "api/decomon.loading", "api/decomon.metrics", "api/decomon.models", "api/decomon.types", "api/modules", "contribute", "getting_started", "index", "install", "tutorials"], "filenames": ["api/decomon.rst", "api/decomon.applications.rst", "api/decomon.applications.cv.rst", "api/decomon.backward_layers.rst", "api/decomon.corners.rst", "api/decomon.layers.rst", "api/decomon.loading.rst", "api/decomon.metrics.rst", "api/decomon.models.rst", "api/decomon.types.rst", "api/modules.md", "contribute.md", "getting_started.md", "index.md", "install.md", "tutorials.md"], "titles": ["decomon package", "decomon.applications package", "decomon.applications.cv package", "decomon.backward_layers package", "decomon.corners package", "decomon.layers package", "decomon.loading package", "decomon.metrics package", "decomon.models package", "decomon.types package", "API Reference", "Contributing", "Getting started", "DecoMon: Automatic Certified Perturbation Analysis of Neural Networks", "Installation", "Tutorials"], "terms": {"applic": [0, 10], "cv": [0, 1], "backward_lay": [0, 10], "activ": [0, 10, 11, 12, 14], "backward_elu": [0, 3], "backward_exponenti": [0, 3], "backward_hard_sigmoid": [0, 3], "backward_linear": [0, 3], "backward_relu": [0, 3], "backward_selu": [0, 3], "backward_sigmoid": [0, 3], "backward_softmax": [0, 3], "backward_softplu": [0, 3], "backward_softsign": [0, 3], "backward_softsign_": [0, 3], "backward_tanh": [0, 3], "deseri": [0, 3, 5], "get": [0, 3, 5, 11, 13], "backwardactiv": [0, 3], "build": [0, 3, 5, 8, 15], "call": [0, 3, 5, 7, 8, 11, 12], "call_no_previ": [0, 3], "call_previ": [0, 3], "freeze_alpha": [0, 3, 5, 8], "freeze_grid": [0, 3], "unfreeze_alpha": [0, 3, 5, 8], "unfreeze_grid": [0, 3], "backwardbatchnorm": [0, 3], "backwardconv2d": [0, 3], "freeze_weight": [0, 3, 5, 8], "get_bounds_linear": [0, 3], "reset_finetun": [0, 3, 5, 8], "unfreeze_weight": [0, 3, 5, 8], "backwarddens": [0, 3], "backwarddropout": [0, 3], "backwardflatten": [0, 3], "backwardinputlay": [0, 3], "backwardpermut": [0, 3], "backwardreshap": [0, 3], "get_backward": [0, 3, 8], "join": [0, 3, 5], "backward_maxpool": [0, 10], "backwardmaxpooling2d": [0, 3], "backward_merg": [0, 10], "backwardadd": [0, 3], "backwardaverag": [0, 3], "backwardconcaten": [0, 3], "backwarddot": [0, 3], "backwardmaximum": [0, 3], "backwardmerg": [0, 3], "backwardminimum": [0, 3], "backwardmultipli": [0, 3], "backwardsubtract": [0, 3], "backward_reshap": [0, 10], "core": [0, 10, 11], "backwardlay": [0, 3], "set_previ": [0, 3], "deel_lip": [0, 10], "backwardgroupsort2": [0, 3], "backward_add": [0, 3], "backward_linear_prod": [0, 3], "backward_max_": [0, 3], "backward_maximum": [0, 3, 10], "backward_minimum": [0, 3, 10], "backward_minu": [0, 3], "backward_multipli": [0, 3], "backward_relu_": [0, 3], "backward_scal": [0, 3], "backward_softplus_": [0, 3], "backward_sort": [0, 3], "backward_substract": [0, 3], "get_forward": [0, 3, 8], "get_ibp": [0, 3, 8], "get_identity_lirpa": [0, 3], "get_input_dim": [0, 3, 8], "merge_with_previ": [0, 3], "corner": [0, 7, 10], "slope": [0, 3, 5, 8, 10], "get_linear_lower_slope_relu": [0, 4], "get_bound_grid_lagrangian": [0, 4], "get_lower_bound_grid_lagrangian": [0, 4], "get_upper_bound_grid_lagrangian": [0, 4], "layer": [0, 3, 6, 7, 8, 10, 12], "elu": [0, 5], "exponenti": [0, 3, 5], "group_sort_2": [0, 5], "hard_sigmoid": [0, 5], "linear": [0, 3, 5, 8, 13], "linear_hull_s_shap": [0, 5], "relu": [0, 3, 5, 12], "selu": [0, 3, 5], "sigmoid": [0, 3, 5, 7], "softmax": [0, 3, 5, 7], "softplu": [0, 3, 5], "softsign": [0, 3, 5], "tanh": [0, 3, 5], "ball": [0, 5, 10], "name": [0, 3, 5, 8, 10], "box": [0, 5, 7, 10, 12, 13], "decomonlay": [0, 5, 7], "compute_output_shap": [0, 5, 7], "get_linear": [0, 5], "reset_lay": [0, 5], "set_back_bound": [0, 5], "set_linear": [0, 5], "shared_weight": [0, 5], "split_kwarg": [0, 5], "f_forward": [0, 5], "f_hybrid": [0, 5], "f_ibp": [0, 5], "grid": [0, 5, 10], "option": [0, 3, 5, 8, 11], "lagrangian": [0, 5], "milp": [0, 5], "staticvari": [0, 5], "vertex": [0, 5, 10], "decomon_lay": [0, 10], "decomonactiv": [0, 5], "decomonbatchnorm": [0, 5], "decomonconv2d": [0, 5], "call_linear": [0, 5], "get_backward_weight": [0, 5], "decomondens": [0, 5], "decomondropout": [0, 5], "decomonflatten": [0, 5], "decomoninputlay": [0, 5], "monotonicconvolution2d": [0, 5], "to_monoton": [0, 5, 8], "decomon_merge_lay": [0, 10], "decomonadd": [0, 5], "call_dumb": [0, 5], "decomonaverag": [0, 5], "decomonconcaten": [0, 5], "decomondot": [0, 5], "decomonmaximum": [0, 5], "decomonminimum": [0, 5], "decomonmultipli": [0, 5], "decomonsubtract": [0, 5], "to_monotonic_merg": [0, 5], "decomon_reshap": [0, 10], "decomonpermut": [0, 5], "decomonreshap": [0, 5], "decomongroupsort": [0, 5], "decomongroupsort2": [0, 5], "maxpool": [0, 10], "decomonmaxpool2d": [0, 5], "decomonmaxpooling2d": [0, 5], "nois": [0, 10, 15], "reading_nnet_acas_2_numpi": [0, 10], "convert_nnet_2_numpi": [0, 5], "clipalpha": [0, 5], "clipalphaandsumtoon": [0, 5], "clipalphagrid": [0, 5], "multipleconstraint": [0, 5], "nonneg": [0, 5], "nonpo": [0, 5], "project_initializer_neg": [0, 5], "project_initializer_po": [0, 5], "ab": [0, 5], "broadcast": [0, 5], "compute_l": [0, 5], "compute_r": [0, 5], "exp": [0, 5], "expand_dim": [0, 5], "frac_po": [0, 5], "frac_pos_hul": [0, 5], "get_coeff_grad": [0, 5], "get_grad": [0, 5], "get_start_point": [0, 5], "grad_desc": [0, 5], "grad_descent_conv": [0, 5], "linear_to_softmax": [0, 5], "log": [0, 5], "max_": [0, 5], "min_": [0, 5], "multipli": [0, 3, 5], "multiply_old": [0, 5], "permute_dimens": [0, 5], "pow": [0, 5], "softmax_to_linear": [0, 5, 8], "softplus_": [0, 5], "sort": [0, 3, 5], "split": [0, 5, 7], "sum": [0, 5], "load": [0, 10], "load_onnx": [0, 10], "check_compatibility_data_format": [0, 6], "clone": [0, 6, 8, 11, 12], "clone_first_2_last": [0, 6], "get_all_input_nam": [0, 6], "get_data_format": [0, 6], "get_input_transpos": [0, 6], "get_parents_format_": [0, 6], "get_tensor_input": [0, 6], "load_onnx_2_kera": [0, 6], "update_dico": [0, 6], "metric": [0, 10], "complex": [0, 10], "get_graph_complex": [0, 7], "coverag": [0, 10], "get_adv_coverage_box": [0, 7], "loss": [0, 10], "decomonlossfus": [0, 7], "call_backward": [0, 7], "call_no_backward": [0, 7], "decomonradiusrobust": [0, 7], "build_asymptotic_crossentropy_model": [0, 7], "build_crossentropy_model": [0, 7], "build_radius_robust_model": [0, 7], "get_adv_loss": [0, 7], "get_lower_loss": [0, 7], "get_model": [0, 7], "get_upper_loss": [0, 7], "adversarial_check": [0, 7], "linear_adv": [0, 7], "adversarial_scor": [0, 7], "upper_scor": [0, 7], "linear_upp": [0, 7], "build_formal_adv_check_model": [0, 7], "build_formal_adv_model": [0, 7], "build_formal_upper_model": [0, 7], "categorical_cross_entropi": [0, 7], "model": [0, 2, 5, 6, 7, 10, 12, 15], "backward_clon": [0, 10], "convert_backward_2_mod": [0, 8], "convert_backward_model": [0, 8], "crown_": [0, 8], "crown_model": [0, 8], "get_backward_model": [0, 8], "get_disconnected_input": [0, 8], "get_fus": [0, 8], "get_input": [0, 8], "get_input_nod": [0, 8], "is_purely_linear": [0, 8], "retrieve_lay": [0, 8], "convert": [0, 10, 12], "backward_fe": [0, 8], "crown": [0, 8], "crown_forward": [0, 8], "crown_hybrid": [0, 8], "crown_ibp": [0, 8], "forward": [0, 5, 7, 8, 13], "forward_fe": [0, 8], "hybrid": [0, 3, 5, 7, 8, 13], "ibp": [0, 5, 8], "get_direct": [0, 8], "get_ibp_forward_from_method": [0, 8], "switch_mode_map": [0, 8], "decomon_sequenti": [0, 10], "backward": [0, 3, 7, 8, 13], "decomonmodel": [0, 8], "set_domain": [0, 8], "decomonsequenti": [0, 8], "clone_functional_model": [0, 8], "clone_sequential_model": [0, 8], "get_backward_lay": [0, 8], "get_backward_model_": [0, 8], "include_dim_layer_fn": [0, 8], "set_domain_priv": [0, 8], "forward_clon": [0, 10], "convert_forward": [0, 8], "convert_forward_functional_model": [0, 8], "check_input_tensors_functionn": [0, 8], "check_input_tensors_sequenti": [0, 8], "convert_2_mod": [0, 8], "convert_to_backward_bound": [0, 8], "fuse_forward_backward": [0, 8], "get_back_bounds_model": [0, 8], "get_depth_dict": [0, 8], "get_inner_lay": [0, 8], "get_input_tensor_x": [0, 8], "get_kei": [0, 8], "get_mod": [0, 8], "get_node_by_id": [0, 8], "get_node_by_id_": [0, 8], "get_original_layer_nam": [0, 8], "pre_process_input": [0, 8], "set_nam": [0, 8], "type": [0, 3, 5, 8, 10, 11, 12], "class": [0, 3, 5, 7, 8], "a_slop": [0, 10], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 14], "base": [0, 3, 5, 7, 8, 11, 13], "object": [0, 5, 8, 15], "adapt": [0, 5, 11, 14], "stable_coeff": [0, 10], "0": [0, 3, 5, 7, 8], "m_backward": [0, 10], "m_forward": [0, 10], "m_rec_backward": [0, 10], "o_slop": [0, 10], "one": [0, 5, 7, 11, 15], "lb": 0, "s_slope": [0, 10], "same": [0, 11, 15], "v_slope": [0, 10], "volum": [0, 3, 5, 8], "z_slope": [0, 10], "zero": [0, 3, 5, 12], "add": [0, 3, 5, 10, 11], "inputs_0": [0, 3, 5], "inputs_1": [0, 3, 5], "dc_decomp": [0, 3, 5, 7, 8], "fals": [0, 3, 5, 7, 8], "convex_domain": [0, 3, 5, 7, 8], "none": [0, 2, 3, 5, 6, 7, 8], "mode": [0, 3, 5, 7, 8, 13], "lirpa": [0, 3, 5, 7], "implement": [0, 3, 5, 11, 13], "paramet": [0, 3, 5, 7, 8], "tensor": [0, 3, 5, 8], "boolean": [0, 3, 5, 8], "indic": [0, 3, 5, 8], "convex": [0, 3, 5, 7, 8, 13], "domain": [0, 3, 5, 7, 8, 12], "whether": [0, 3, 5, 8], "we": [0, 3, 5, 8, 11, 13, 15], "return": [0, 3, 5, 7, 8], "differ": [0, 3, 5, 8, 11], "decomposit": [0, 3, 5, 8], "our": [0, 3, 5, 8, 12, 13, 15], "inputs_": [0, 3, 5], "convert_lower_search_2_subset_sum": [0, 10], "x": [0, 2, 3, 4, 5, 11], "w": [0, 5], "b": [0, 5], "n": [0, 5, 11, 14], "get_ab": [0, 10], "model_": 0, "get_ab_finetun": [0, 10], "get_bound_grid": [0, 10], "w_u": [0, 4, 7], "b_u": [0, 4, 7], "w_l": [0, 4, 7], "b_l": [0, 4, 7], "get_linear_hull_relu": [0, 10], "upper": [0, 3, 4, 5, 7, 8, 12, 13, 15], "lower": [0, 3, 4, 5, 7, 8, 12, 13, 15], "upper_g": 0, "lower_g": 0, "kwarg": [0, 3, 4, 5, 7, 8], "get_linear_hull_s_shap": [0, 10], "func": [0, 5], "function": [0, 3, 5, 8, 11, 13, 15], "f_prime": [0, 5], "sigmoid_prim": [0, 5, 10], "comput": [0, 5, 7, 11, 15], "hull": [0, 5], "shape": [0, 3, 5, 12], "given": [0, 11, 15], "pre": [0, 11], "neuron": 0, "list": [0, 3, 5, 7, 8, 11, 15], "input": [0, 3, 5, 7, 8, 11, 13, 15], "deriv": [0, 5, 13, 15], "propag": [0, 3, 5, 8, 13], "updat": [0, 5, 11, 14], "get_linear_hull_sigmoid": [0, 10], "get_linear_hull_tanh": [0, 10], "get_linear_softplus_hul": [0, 10], "get_low": [0, 10], "meta": 0, "aggreg": 0, "all": [0, 7], "wai": [0, 11, 13], "constant": [0, 5], "bound": [0, 3, 5, 7, 8, 12, 13, 15], "depend": 0, "param": 0, "repres": [0, 5, 13], "weight": [0, 5, 8], "affin": [0, 5, 8, 13], "bia": [0, 5], "see": [0, 5, 11, 14], "get_lower_bal": [0, 10], "x_0": [0, 3], "ep": 0, "p": 0, "min": [0, 5], "an": [0, 3, 5, 7, 8, 14, 15], "fucntion": 0, "over": 0, "lp": 0, "center": 0, "radiu": 0, "norm": [0, 5, 13], "consid": [0, 11], "_p": 0, "get_lower_ball_finetun": [0, 10], "get_lower_bound_grid": [0, 10], "get_lower_box": [0, 10, 12], "x_min": [0, 2, 7, 12], "x_max": [0, 2, 7, 12], "get_lower_lay": [0, 10], "get_lower_layer_box": [0, 10], "get_lq_norm": [0, 10], "axi": [0, 3, 5], "1": [0, 2, 3, 5, 7, 8, 12, 13], "2": [0, 5, 12, 13], "power": [0, 15], "must": [0, 3, 5], "integ": [0, 5, 7, 8], "which": [0, 5, 7, 11], "get_t_low": [0, 10], "u_c_flat": 0, "l_c_flat": 0, "s_u": 0, "interpol": 0, "between": [0, 5, 15], "have": [0, 3, 5, 11, 14, 15], "symbol": [0, 5, 7, 13], "approxim": [0, 15], "best": [0, 15], "coeffici": 0, "flatten": [0, 3, 5], "highest": 0, "valu": [0, 3, 5, 15], "thi": [0, 3, 5, 8, 11, 13, 14, 15], "subcas": 0, "get_t_upp": [0, 10], "s_l": 0, "lowest": 0, "get_upp": [0, 10], "get_upper_bal": [0, 10], "max": [0, 3, 5], "get_upper_ball_finetun": [0, 10], "get_upper_bound_grid": [0, 10], "get_upper_box": [0, 10, 12], "within": [0, 12], "hypercub": 0, "defin": [0, 12, 15], "its": [0, 3, 5, 8, 11, 12], "extrem": [0, 7], "get_upper_lay": [0, 10], "get_upper_layer_box": [0, 10], "maximum": [0, 3, 5, 7, 10], "finetun": [0, 3, 5, 8], "element": [0, 3, 5], "wise": [0, 3, 5], "minimum": [0, 3, 5, 10], "minu": [0, 10], "noisy_low": [0, 10], "noisy_upp": [0, 10], "relu_": [0, 10], "relu_prim": [0, 10], "set_mod": [0, 10], "final_mod": 0, "softsign_prim": [0, 10], "subset_sum_low": [0, 10], "repeat": 0, "substract": [0, 10], "tanh_prim": [0, 10], "check_adv_box": [0, 10], "source_label": [0, 2, 7], "target_label": [0, 2, 7], "batch_siz": [0, 2, 7], "fast": [0, 3, 5, 7], "true": [0, 3, 5, 7, 8], "output": [0, 5, 7, 11, 12, 15], "i": [0, 3, 5, 7, 8, 11, 13, 14, 15], "neg": [0, 5, 7], "formal": [0, 7, 13, 15], "guarante": [0, 7, 15], "adversari": [0, 7, 15], "exampl": [0, 7, 8, 11, 12, 14], "either": [0, 5, 7, 11, 14], "kera": [0, 3, 5, 7, 8, 12, 13], "numpi": [0, 3, 5, 7, 12], "arrai": [0, 3, 5, 7], "label": [0, 7, 11], "should": [0, 3, 5, 7, 11], "predict": [0, 7, 13, 15], "time": [0, 3, 5, 7, 11, 15], "can": [0, 5, 7, 11, 12, 14, 15], "contain": [0, 3, 5, 7, 11], "multipl": [0, 5, 7], "each": [0, 5, 7, 11], "sampl": [0, 5, 7, 15], "never": [0, 7, 15], "target": [0, 7], "effici": [0, 7, 11, 15], "minibatch": [0, 7], "us": [0, 3, 5, 7, 8, 11, 12, 14, 15], "optim": [0, 5, 7, 8, 13], "score": [0, 7], "vector": [0, 7], "attack": [0, 7, 15], "get_adv_box": [0, 10], "n_sub_box": [0, 7], "get_adv_nois": [0, 10], "inf": [0, 13], "get_lower_nois": [0, 10], "around": 0, "np": [0, 12], "impact": 0, "assess": [0, 13, 15], "rang": [0, 13], "taken": 0, "insid": [0, 8], "get_range_box": [0, 10], "get_range_nois": [0, 10], "andlow": 0, "get_upper_nois": [0, 10], "refine_box": [0, 10], "n_split": 0, "random": 0, "10": [0, 12], "get_lower_box_tun": [0, 10], "decomon_model_concat": 0, "lr": 0, "epoch": 0, "100": 0, "get_upper_box_tun": [0, 10], "The": [0, 3, 5, 11, 14, 15], "goal": 0, "provid": [0, 3, 5, 8, 15], "simpl": [0, 15], "interfac": 0, "latest": [0, 14], "explan": 0, "techniqu": 0, "certifi": [0, 12], "perturb": [0, 5, 15], "analysi": [0, 5], "submodul": [1, 10], "wrapper": [1, 10], "get_adv_bright": [1, 2], "bright_min": 2, "bright_max": 2, "previou": [3, 5, 8, 11, 13], "unit": [3, 5], "lirpaof": 3, "hard": [3, 5], "alpha": [3, 5], "max_valu": [3, 5], "threshold": [3, 5], "scale": [3, 5], "dc_decom": 3, "w_out_u": 3, "b_out_u": 3, "w_out_l": 3, "b_out_l": 3, "y": [3, 5, 11], "from": [3, 5, 8, 12, 14, 15], "method": [3, 5, 8, 11, 12, 14], "among": [3, 5], "identifi": [3, 5], "str": [3, 5, 11], "arg": [3, 5, 7, 8], "input_shap": [3, 5, 6, 7], "where": [3, 5, 11], "": [3, 5, 12, 15], "logic": [3, 5, 11], "live": [3, 5], "mai": [3, 5, 11, 14], "creat": [3, 5, 8, 11, 12, 14], "state": [3, 5], "except": [3, 5, 8, 11], "first": [3, 5, 11, 12, 15], "invoc": [3, 5], "wrap": [3, 5], "creation": [3, 5, 11], "variabl": [3, 4, 5, 13], "other": [3, 5, 11, 12], "resourc": [3, 5], "tf": [3, 5], "init_scop": [3, 5], "It": [3, 5, 8, 11], "recommend": [3, 5, 11, 14, 15], "includ": [3, 5, 8, 11], "instanc": [3, 5, 8, 11, 14], "nest": [3, 5], "__init__": [3, 5], "automat": [3, 5, 7, 11], "befor": [3, 5, 11], "execut": [3, 5, 11], "dict": [3, 5], "tupl": [3, 5], "posit": [3, 5], "argument": [3, 5], "subject": [3, 5], "special": [3, 5], "rule": [3, 5], "explicitli": [3, 5], "pass": [3, 5, 11], "A": [3, 5, 11, 14, 15], "cannot": [3, 5], "via": [3, 5, 11], "default": [3, 5, 8], "keyword": [3, 5], "python": [3, 5], "scalar": [3, 5], "cast": [3, 5], "mask": [3, 5], "metadata": [3, 5], "onli": [3, 5, 11], "collect": [3, 5], "ar": [3, 5, 11, 12, 13], "built": [3, 5, 11, 15], "info": [3, 5], "input_spec": [3, 5], "compat": [3, 5, 13, 15], "check": [3, 5], "against": [3, 5], "mix": [3, 5], "precis": [3, 5], "appli": [3, 5, 8], "If": [3, 5, 8, 11, 14], "ha": [3, 5, 11], "behavior": [3, 5, 8], "handl": [3, 5], "manual": [3, 5, 11, 13], "savedmodel": [3, 5], "specif": [3, 5], "gener": [3, 5, 11, 13], "integr": [3, 5], "variou": [3, 5, 13], "ecosystem": [3, 5], "like": [3, 5, 11, 15], "tfmot": [3, 5], "tflite": [3, 5], "j": [3, 5], "etc": [3, 5], "support": [3, 5, 13], "addit": [3, 5, 15], "although": [3, 5], "reason": [3, 5], "abov": [3, 5, 11], "follow": [3, 5, 13, 14], "reserv": [3, 5], "train": [3, 5, 7, 15], "meant": [3, 5, 11], "infer": [3, 5], "take": [3, 5, 11, 15], "set": [3, 5, 13], "did": [3, 5], "come": [3, 5], "correspond": [3, 5, 11], "e": [3, 5, 11], "came": [3, 5], "batch": [3, 5], "normal": [3, 5], "conv2d": [3, 5], "dens": [3, 5, 12, 15], "dropout": [3, 5], "permut": [3, 5], "reshap": [3, 5], "maxpooling2d": [3, 5], "averag": [3, 5], "concaten": [3, 5], "dot": [3, 5], "subtract": [3, 5], "groupsort2": 3, "w_out_u_": 3, "b_out_u_": 3, "w_out_l_": 3, "b_out_l_": 3, "bounds_x": 3, "back_bound": [3, 8], "subroutin": 3, "prod": 3, "grad_bound": 3, "perform": [3, 5, 11, 15], "gradient": [3, 5], "oper": [3, 5, 15], "along": [3, 5], "scale_factor": 3, "input_dim": [3, 5, 8, 12], "upper_g_": 4, "lower_g_": 4, "finetune_grid": 4, "finetune_n_w": 4, "finetune_n_b": 4, "finetune_u_w": 4, "finetune_u_b": 4, "offici": 5, "document": [5, 14], "data_format": [5, 6], "channels_last": [5, 6], "faster": [5, 11], "than": [5, 7, 11, 14], "foe": 5, "ident": 5, "equal": 5, "predefin": 5, "chosen": 5, "so": [5, 8, 11, 13, 15], "mean": 5, "varianc": 5, "preserv": [5, 8], "two": 5, "consecut": 5, "long": 5, "initi": [5, 15], "correctli": 5, "lecun_norm": 5, "number": [5, 11], "larg": 5, "enough": 5, "refer": [5, 11, 13, 15], "more": 5, "inform": 5, "clip": 5, "hyperbol": 5, "deel": 5, "lip": 5, "abc": 5, "abstract": 5, "common": [5, 11], "everi": 5, "has_backward_bound": 5, "bool_init": 5, "bool": 5, "store": 5, "static": 5, "further": 5, "detail": 5, "subclass": 5, "overrid": 5, "thei": 5, "need": [5, 11, 14, 15], "step": 5, "instanti": 5, "invok": 5, "typic": 5, "discret": 5, "tensorshap": 5, "expect": 5, "per": [5, 8], "batchnorm": 5, "without": [5, 11, 13], "caus": 5, "happen": 5, "requir": [5, 8, 11, 14, 15], "later": 5, "match": 5, "here": [5, 11, 15], "structur": 5, "free": 5, "dimens": [5, 8], "instead": [5, 8, 15], "self": [5, 11], "inputlay": 5, "alia": 5, "share": [5, 8], "transform": 5, "standard": [5, 11], "test": [5, 15], "know": 5, "how": [5, 11, 14, 15], "monotoniclay": 5, "good": [5, 11], "treat": 5, "yet": 5, "rais": 5, "typeerror": 5, "dim": 5, "associ": 5, "merg": [5, 11], "repo": 5, "filenam": 5, "normalize_in": 5, "normalize_out": 5, "verbos": 5, "constraint": [5, 15], "cosntraint": 5, "constraint_0": 5, "constraint_1": 5, "stack": 5, "constrain": 5, "non": [5, 8], "largest": 5, "possibl": [5, 12, 13], "n_dim": 5, "n_linear": 5, "magnitud": [5, 15], "z": [5, 11], "l2": 5, "distanc": 5, "start": [5, 11, 13, 15], "point": [5, 11, 15], "global": 5, "optimum": 5, "dictionnari": 5, "complement": 5, "extra": 5, "r": [5, 11], "k": 5, "g": 5, "reprend": 5, "gloabl": 5, "iter": 5, "done": [5, 11], "far": [5, 13], "size": 5, "f": [5, 11], "sum_": 5, "constant_i": 5, "w_i": 5, "b_i": 5, "quit": 5, "easi": 5, "els": 5, "trick": 5, "allow": [5, 11, 13], "backpropag": [5, 13], "warm": 5, "mid": 5, "minim": 5, "convex_0": 5, "convex_1": 5, "n_iter": 5, "5": 5, "compon": 5, "total": 5, "concave_upp": 5, "convex_low": 5, "op_po": 5, "ops_neg": 5, "axis_perm": 5, "verif": 5, "input_": [5, 7], "select": 5, "k_model": 6, "allowed_format": 6, "prev_format": 6, "node": [6, 8], "onnx_model": 6, "node_": 6, "onnx_filenam": 6, "dico_nod": [6, 8], "layer_nam": 6, "clip_valu": 7, "promot": [7, 13], "robust": [7, 13, 15], "adv_scor": 7, "predictioni": 7, "z_tensor": 7, "y_tensor": 7, "limit": 7, "local": [7, 15], "neural": [7, 12, 15], "network": [7, 12, 15], "decomon_model": [7, 12], "design": [7, 15], "certif": [7, 13, 15], "dtype": 8, "float32": 8, "input_tensor": 8, "forward_map": 8, "joint": 8, "layer_fn": 8, "final_ibp": 8, "final_forward": 8, "input_map": 8, "backward_bound": 8, "backward_map": 8, "fuse": 8, "output_map": 8, "merge_lay": 8, "4": [8, 13], "feed_backward": 8, "feed_forward": 8, "finetune_forward": 8, "finetune_backward": 8, "extra_input": 8, "to_kera": 8, "dico_grid": 8, "layer_map": 8, "monotonicsequenti": 8, "inherit": 8, "sequenti": [8, 12], "slope_backward": 8, "translat": 8, "relax": [8, 13], "upon": 8, "placehold": 8, "callabl": 8, "By": 8, "similar": 8, "new": [8, 11, 13, 15], "thu": 8, "exist": [8, 11, 13], "anoth": 8, "when": [8, 13, 14], "replica": 8, "copi": 8, "distribut": 8, "strategi": 8, "want": [8, 11, 14, 15], "still": [8, 11, 14], "feed": 8, "separ": [8, 11], "reproduc": 8, "origin": [8, 11], "n_subgrad": 8, "input_lay": 8, "input_model": 8, "extern": 8, "counterpart": 8, "convex_domain_prev": 8, "count": 8, "input_dim_init": 8, "mode_from": 8, "mode_to": 8, "upper_lay": 8, "lower_lay": 8, "x_tensor": 8, "tensor_map": 8, "id_nod": 8, "outbound": 8, "pattern": 8, "_monoton": 8, "input_layer_": 8, "extra_id": 8, "decomon": [10, 11, 12], "packag": [10, 11, 13, 14], "subpackag": [10, 11], "modul": [10, 11, 14, 15], "content": [10, 11], "util": 10, "wrapper_with_tun": 10, "welcom": 11, "you": [11, 12, 14], "help": 11, "fix": 11, "bug": 11, "issu": [11, 13], "improv": [11, 13], "educ": 11, "tutori": [11, 12, 13], "exhaust": 11, "project": 11, "host": 11, "http": [11, 14], "com": [11, 14], "airbu": [11, 14], "repositori": [11, 14, 15], "made": [11, 15], "guid": 11, "organ": 11, "virtual": [11, 14], "ensur": [11, 14, 15], "version": [11, 12, 14], "greater": [11, 14], "achiev": [11, 14], "show": [11, 14, 15], "8": [11, 14], "13": [11, 14], "mention": [11, 14], "do": [11, 14, 15], "env": [11, 14], "shell": [11, 14], "m": [11, 14], "bin": [11, 14], "script": [11, 14], "detect": [11, 14], "howver": [11, 14], "better": [11, 14], "beforehand": [11, 14], "gpu": [11, 14], "cpu": [11, 14], "properli": [11, 14], "edit": 11, "pip": [11, 13], "21": 11, "abl": [11, 15], "pyproject": 11, "toml": 11, "file": 11, "git": [11, 14], "cd": 11, "u": 11, "sphinx": 11, "html": 11, "particular": 11, "autogener": 11, "api": [11, 13], "txt": 11, "order": 11, "appropri": 11, "sever": 11, "autodoc_notebooks_repo_url": 11, "url": 11, "autodoc_notebooks_branch": 11, "branch": 11, "For": [11, 15], "current_repo_url_withdotgit": 11, "remot": 11, "export": 11, "current": [11, 13], "On": 11, "mac": 11, "bash": 11, "make": [11, 15], "rm": 11, "rst": 11, "apidoc": 11, "o": 11, "t": 11, "src": 11, "avail": [11, 14, 15], "generate_nb_index": 11, "py": 11, "remov": 11, "rf": 11, "index": 11, "brows": 11, "server": 11, "d": 11, "go": [11, 15], "localhost": 11, "8000": 11, "rather": 11, "just": 11, "open": [11, 13, 15], "directli": 11, "browser": 11, "javascript": 11, "work": [11, 13, 14], "command": 11, "prompt": 11, "line": 11, "equival": 11, "directori": 11, "necessari": 11, "launch": 11, "avoid": 11, "been": 11, "md": 11, "last": 11, "actual": 11, "chang": 11, "beacaus": 11, "modifi": 11, "To": 11, "gather": 11, "folder": [11, 15], "tox": 11, "manag": 11, "own": 11, "librari": [11, 13], "tox_venv": 11, "suit": 11, "specifi": 11, "py39": 11, "under": [11, 13], "tabl": 11, "pytest": 11, "could": 11, "also": [11, 13, 15], "after": [11, 15], "v": 11, "One": 11, "programmat": 11, "broken": 11, "thank": [11, 13, 15], "nbmake": 11, "extens": 11, "maintain": 11, "across": 11, "some": [11, 13, 15], "linter": 11, "ci": 11, "push": 11, "onc": 11, "bewar": 11, "stage": 11, "your_fil": 11, "accept": 11, "them": 11, "hook": 11, "refus": 11, "modif": [11, 15], "forc": 11, "violat": 11, "verifi": 11, "prefer": 11, "uninstal": 11, "try": 11, "give": [11, 15], "introductori": 11, "insert": 11, "These": 11, "cell": 11, "enabl": 11, "markdown": 11, "being": 11, "sign": 11, "remain": [11, 13, 15], "great": 11, "quick": 11, "main": [11, 14], "featur": 11, "nice": 11, "thumbnail": 11, "notebook_thumbnail": 11, "upload": 11, "wikimedia": 11, "org": 11, "wikipedia": 11, "27": 11, "mnistexampl": 11, "png": 11, "on_colab": 11, "googl": 11, "get_ipython": 11, "import": [11, 12], "sy": 11, "noqa": 11, "pycln": 11, "dev": 11, "releas": [11, 13], "egg": [11, 14], "deploi": 11, "spec": 11, "whenev": 11, "think": 11, "crash": 11, "doe": 11, "afterward": 11, "instruct": 11, "annot": 11, "doctr": 11, "pars": 11, "napoleon": 11, "As": 11, "hint": 11, "duplic": 11, "potenti": [11, 15], "inconsist": 11, "explicit": 11, "public": 11, "pep": 11, "257": 11, "pydocstyl": 11, "tool": [11, 13], "nativ": 11, "restructuredtext": 11, "reus": 11, "materi": 11, "alreadi": 11, "written": [11, 15], "format": 11, "myst": 11, "makdown": 11, "direct": 11, "role": 11, "explain": 11, "tree": 11, "markodown": 11, "block": 11, "toctre": 11, "maxdepth": 11, "caption": 11, "getting_start": 11, "readi": 11, "pr": 11, "summar": 11, "process": 11, "fork": 11, "below": 11, "wait": 11, "review": 11, "comment": 11, "account": 11, "least": 11, "fetch": 11, "re": 11, "upstream": 11, "post": 11, "out": 11, "practic": 11, "respect": [11, 12, 13], "statu": 11, "probabl": 11, "lot": [11, 15], "ones": [11, 12], "At": 11, "end": 11, "squash": 11, "few": 11, "reformat": 11, "rewrit": 11, "messag": 11, "why": 11, "part": [11, 15], "itself": 11, "about": [11, 13], "what": [11, 15], "rebas": 11, "diverg": 11, "too": [11, 15], "much": [11, 15], "finish": 11, "your": [12, 13, 14], "obtain": 12, "tensorflow": [12, 13], "toi": 12, "fake": 12, "right": 12, "lower_bound": 12, "upper_bound": 12, "print": 12, "illustr": 12, "In": [13, 15], "tackl": 13, "reli": 13, "explor": 13, "tighten": 13, "while": 13, "algorithm": 13, "differenti": 13, "interv": 13, "well": 13, "approach": 13, "wider": 13, "l_": 13, "describ": 13, "vertic": 13, "believ": 13, "complementari": 13, "sinc": 13, "pytorch": 13, "up": 13, "commun": 13, "worri": 13, "technic": 13, "hope": 13, "safeti": 13, "critic": 13, "system": [13, 15], "instal": 13, "prerequisit": 13, "3": 13, "contribut": 13, "develop": [13, 15], "environ": 13, "guidelin": 13, "prepar": 13, "submit": [13, 14], "pull": 13, "request": 13, "github": [13, 14], "nb": 14, "ani": [14, 15], "setuptool": 14, "upgrad": 14, "pleas": 14, "present": 15, "curat": 15, "notebook": 15, "sinusoid": 15, "sure": 15, "smooth": 15, "almost": 15, "data": 15, "close": 15, "howev": 15, "clue": 15, "look": 15, "proof": 15, "weird": 15, "dataset": 15, "learn": 15, "fulli": 15, "connect": 15, "second": 15, "strang": 15, "behaviour": 15, "sensor": 15, "regress": 15, "embed": 15, "simul": 15, "dure": 15, "platform": 15, "usual": 15, "run": 15, "hardwar": 15, "real": 15, "prove": 15, "decis": 15, "surrog": 15, "safe": 15, "demonstr": 15, "despit": 15, "consist": 15, "sensoir": 15, "determinist": 15, "vicin": 15, "classif": 15, "task": 15, "imag": 15, "classifi": 15, "mnist": 15, "hand": 15, "digit": 15, "investig": 15, "unstructur": 15, "space": 15, "kind": 15, "vari": 15, "unchang": 15, "toward": 15, "bright": 15}, "objects": {"": [[0, 0, 0, "-", "decomon"]], "decomon": [[1, 0, 0, "-", "applications"], [3, 0, 0, "-", "backward_layers"], [4, 0, 0, "-", "corners"], [5, 0, 0, "-", "layers"], [6, 0, 0, "-", "loading"], [7, 0, 0, "-", "metrics"], [8, 0, 0, "-", "models"], [9, 0, 0, "-", "types"], [0, 0, 0, "-", "utils"], [0, 0, 0, "-", "wrapper"], [0, 0, 0, "-", "wrapper_with_tuning"]], "decomon.applications": [[2, 0, 0, "-", "cv"]], "decomon.applications.cv": [[2, 0, 0, "-", "wrapper"]], "decomon.applications.cv.wrapper": [[2, 1, 1, "", "get_adv_brightness"]], "decomon.backward_layers": [[3, 0, 0, "-", "activations"], [3, 0, 0, "-", "backward_layers"], [3, 0, 0, "-", "backward_maxpooling"], [3, 0, 0, "-", "backward_merge"], [3, 0, 0, "-", "backward_reshape"], [3, 0, 0, "-", "core"], [3, 0, 0, "-", "deel_lip"], [3, 0, 0, "-", "utils"]], "decomon.backward_layers.activations": [[3, 1, 1, "", "backward_elu"], [3, 1, 1, "", "backward_exponential"], [3, 1, 1, "", "backward_hard_sigmoid"], [3, 1, 1, "", "backward_linear"], [3, 1, 1, "", "backward_relu"], [3, 1, 1, "", "backward_selu"], [3, 1, 1, "", "backward_sigmoid"], [3, 1, 1, "", "backward_softmax"], [3, 1, 1, "", "backward_softplus"], [3, 1, 1, "", "backward_softsign"], [3, 1, 1, "", "backward_softsign_"], [3, 1, 1, "", "backward_tanh"], [3, 1, 1, "", "deserialize"], [3, 1, 1, "", "get"]], "decomon.backward_layers.backward_layers": [[3, 2, 1, "", "BackwardActivation"], [3, 2, 1, "", "BackwardBatchNormalization"], [3, 2, 1, "", "BackwardConv2D"], [3, 2, 1, "", "BackwardDense"], [3, 2, 1, "", "BackwardDropout"], [3, 2, 1, "", "BackwardFlatten"], [3, 2, 1, "", "BackwardInputLayer"], [3, 2, 1, "", "BackwardPermute"], [3, 2, 1, "", "BackwardReshape"], [3, 1, 1, "", "get_backward"], [3, 1, 1, "", "join"]], "decomon.backward_layers.backward_layers.BackwardActivation": [[3, 3, 1, "", "build"], [3, 3, 1, "", "call"], [3, 3, 1, "", "call_no_previous"], [3, 3, 1, "", "call_previous"], [3, 3, 1, "", "freeze_alpha"], [3, 3, 1, "", "freeze_grid"], [3, 3, 1, "", "unfreeze_alpha"], [3, 3, 1, "", "unfreeze_grid"]], "decomon.backward_layers.backward_layers.BackwardBatchNormalization": [[3, 3, 1, "", "call"]], "decomon.backward_layers.backward_layers.BackwardConv2D": [[3, 3, 1, "", "build"], [3, 3, 1, "", "call"], [3, 3, 1, "", "call_no_previous"], [3, 3, 1, "", "call_previous"], [3, 3, 1, "", "freeze_alpha"], [3, 3, 1, "", "freeze_weights"], [3, 3, 1, "", "get_bounds_linear"], [3, 3, 1, "", "reset_finetuning"], [3, 3, 1, "", "unfreeze_alpha"], [3, 3, 1, "", "unfreeze_weights"]], "decomon.backward_layers.backward_layers.BackwardDense": [[3, 3, 1, "", "build"], [3, 3, 1, "", "call"], [3, 3, 1, "", "call_no_previous"], [3, 3, 1, "", "call_previous"], [3, 3, 1, "", "freeze_alpha"], [3, 3, 1, "", "freeze_weights"], [3, 3, 1, "", "reset_finetuning"], [3, 3, 1, "", "unfreeze_alpha"], [3, 3, 1, "", "unfreeze_weights"]], "decomon.backward_layers.backward_layers.BackwardDropout": [[3, 3, 1, "", "call"]], "decomon.backward_layers.backward_layers.BackwardFlatten": [[3, 3, 1, "", "call"]], "decomon.backward_layers.backward_layers.BackwardInputLayer": [[3, 3, 1, "", "call"], [3, 3, 1, "", "call_no_previous"], [3, 3, 1, "", "call_previous"]], "decomon.backward_layers.backward_layers.BackwardPermute": [[3, 3, 1, "", "call"]], "decomon.backward_layers.backward_layers.BackwardReshape": [[3, 3, 1, "", "call"], [3, 3, 1, "", "call_no_previous"], [3, 3, 1, "", "call_previous"]], "decomon.backward_layers.backward_maxpooling": [[3, 2, 1, "", "BackwardMaxPooling2D"]], "decomon.backward_layers.backward_maxpooling.BackwardMaxPooling2D": [[3, 3, 1, "", "call"]], "decomon.backward_layers.backward_merge": [[3, 2, 1, "", "BackwardAdd"], [3, 2, 1, "", "BackwardAverage"], [3, 2, 1, "", "BackwardConcatenate"], [3, 2, 1, "", "BackwardDot"], [3, 2, 1, "", "BackwardMaximum"], [3, 2, 1, "", "BackwardMerge"], [3, 2, 1, "", "BackwardMinimum"], [3, 2, 1, "", "BackwardMultiply"], [3, 2, 1, "", "BackwardSubtract"]], "decomon.backward_layers.backward_merge.BackwardAdd": [[3, 3, 1, "", "call"], [3, 3, 1, "", "call_no_previous"], [3, 3, 1, "", "call_previous"]], "decomon.backward_layers.backward_merge.BackwardAverage": [[3, 3, 1, "", "call"], [3, 3, 1, "", "call_no_previous"], [3, 3, 1, "", "call_previous"]], "decomon.backward_layers.backward_merge.BackwardConcatenate": [[3, 3, 1, "", "call"]], "decomon.backward_layers.backward_merge.BackwardDot": [[3, 3, 1, "", "call"]], "decomon.backward_layers.backward_merge.BackwardMaximum": [[3, 3, 1, "", "call"]], "decomon.backward_layers.backward_merge.BackwardMinimum": [[3, 3, 1, "", "call"]], "decomon.backward_layers.backward_merge.BackwardMultiply": [[3, 3, 1, "", "call"]], "decomon.backward_layers.backward_merge.BackwardSubtract": [[3, 3, 1, "", "call"]], "decomon.backward_layers.core": [[3, 2, 1, "", "BackwardLayer"]], "decomon.backward_layers.core.BackwardLayer": [[3, 3, 1, "", "set_previous"]], "decomon.backward_layers.deel_lip": [[3, 2, 1, "", "BackwardDense"], [3, 2, 1, "", "BackwardGroupSort2"]], "decomon.backward_layers.deel_lip.BackwardGroupSort2": [[3, 3, 1, "", "call_previous"]], "decomon.backward_layers.utils": [[3, 1, 1, "", "backward_add"], [3, 1, 1, "", "backward_linear_prod"], [3, 1, 1, "", "backward_max_"], [3, 1, 1, "", "backward_maximum"], [3, 1, 1, "", "backward_minimum"], [3, 1, 1, "", "backward_minus"], [3, 1, 1, "", "backward_multiply"], [3, 1, 1, "", "backward_relu_"], [3, 1, 1, "", "backward_scale"], [3, 1, 1, "", "backward_softplus_"], [3, 1, 1, "", "backward_sort"], [3, 1, 1, "", "backward_substract"], [3, 1, 1, "", "get_FORWARD"], [3, 1, 1, "", "get_IBP"], [3, 1, 1, "", "get_identity_lirpa"], [3, 1, 1, "", "get_input_dim"], [3, 1, 1, "", "merge_with_previous"]], "decomon.corners": [[4, 0, 0, "-", "slope"], [4, 0, 0, "-", "utils"]], "decomon.corners.slope": [[4, 1, 1, "", "get_linear_lower_slope_relu"]], "decomon.corners.utils": [[4, 1, 1, "", "get_bound_grid_lagrangian"], [4, 1, 1, "", "get_lower_bound_grid_lagrangian"], [4, 1, 1, "", "get_upper_bound_grid_lagrangian"]], "decomon.layers": [[5, 0, 0, "-", "activations"], [5, 0, 0, "-", "core"], [5, 0, 0, "-", "decomon_layers"], [5, 0, 0, "-", "decomon_merge_layers"], [5, 0, 0, "-", "decomon_reshape"], [5, 0, 0, "-", "deel_lip"], [5, 0, 0, "-", "maxpooling"], [5, 0, 0, "-", "noise"], [5, 0, 0, "-", "reading_nnet_acas_2_numpy"], [5, 0, 0, "-", "utils"]], "decomon.layers.activations": [[5, 1, 1, "", "deserialize"], [5, 1, 1, "", "elu"], [5, 1, 1, "", "exponential"], [5, 1, 1, "", "get"], [5, 1, 1, "", "group_sort_2"], [5, 1, 1, "", "hard_sigmoid"], [5, 1, 1, "", "linear"], [5, 1, 1, "", "linear_hull_s_shape"], [5, 1, 1, "", "relu"], [5, 1, 1, "", "selu"], [5, 1, 1, "", "sigmoid"], [5, 1, 1, "", "softmax"], [5, 1, 1, "", "softplus"], [5, 1, 1, "", "softsign"], [5, 1, 1, "", "tanh"]], "decomon.layers.core": [[5, 2, 1, "", "Ball"], [5, 2, 1, "", "Box"], [5, 2, 1, "", "DEEL_LIP"], [5, 2, 1, "", "DecomonLayer"], [5, 2, 1, "", "F_FORWARD"], [5, 2, 1, "", "F_HYBRID"], [5, 2, 1, "", "F_IBP"], [5, 2, 1, "", "Grid"], [5, 2, 1, "", "Option"], [5, 2, 1, "", "StaticVariables"], [5, 2, 1, "", "Vertex"]], "decomon.layers.core.Ball": [[5, 4, 1, "", "name"]], "decomon.layers.core.Box": [[5, 4, 1, "", "name"]], "decomon.layers.core.DEEL_LIP": [[5, 4, 1, "", "name"]], "decomon.layers.core.DecomonLayer": [[5, 3, 1, "", "build"], [5, 3, 1, "", "call"], [5, 3, 1, "", "compute_output_shape"], [5, 3, 1, "", "freeze_alpha"], [5, 3, 1, "", "freeze_weights"], [5, 3, 1, "", "get_linear"], [5, 3, 1, "", "join"], [5, 3, 1, "", "reset_finetuning"], [5, 3, 1, "", "reset_layer"], [5, 3, 1, "", "set_back_bounds"], [5, 3, 1, "", "set_linear"], [5, 3, 1, "", "shared_weights"], [5, 3, 1, "", "split_kwargs"], [5, 3, 1, "", "unfreeze_alpha"], [5, 3, 1, "", "unfreeze_weights"]], "decomon.layers.core.F_FORWARD": [[5, 4, 1, "", "name"]], "decomon.layers.core.F_HYBRID": [[5, 4, 1, "", "name"]], "decomon.layers.core.F_IBP": [[5, 4, 1, "", "name"]], "decomon.layers.core.Grid": [[5, 4, 1, "", "name"]], "decomon.layers.core.Option": [[5, 4, 1, "", "lagrangian"], [5, 4, 1, "", "milp"]], "decomon.layers.core.Vertex": [[5, 4, 1, "", "name"]], "decomon.layers.decomon_layers": [[5, 2, 1, "", "DecomonActivation"], [5, 2, 1, "", "DecomonBatchNormalization"], [5, 2, 1, "", "DecomonConv2D"], [5, 2, 1, "", "DecomonDense"], [5, 2, 1, "", "DecomonDropout"], [5, 2, 1, "", "DecomonFlatten"], [5, 2, 1, "", "DecomonInputLayer"], [5, 4, 1, "", "MonotonicConvolution2D"], [5, 1, 1, "", "to_monotonic"]], "decomon.layers.decomon_layers.DecomonActivation": [[5, 3, 1, "", "build"], [5, 3, 1, "", "call"], [5, 3, 1, "", "freeze_alpha"], [5, 3, 1, "", "reset_finetuning"], [5, 3, 1, "", "unfreeze_alpha"]], "decomon.layers.decomon_layers.DecomonBatchNormalization": [[5, 3, 1, "", "build"], [5, 3, 1, "", "call"], [5, 3, 1, "", "compute_output_shape"], [5, 3, 1, "", "reset_layer"]], "decomon.layers.decomon_layers.DecomonConv2D": [[5, 3, 1, "", "build"], [5, 3, 1, "", "call"], [5, 3, 1, "", "call_linear"], [5, 3, 1, "", "compute_output_shape"], [5, 3, 1, "", "freeze_alpha"], [5, 3, 1, "", "freeze_weights"], [5, 3, 1, "", "get_backward_weights"], [5, 3, 1, "", "reset_finetuning"], [5, 3, 1, "", "reset_layer"], [5, 3, 1, "", "set_linear"], [5, 3, 1, "", "shared_weights"], [5, 3, 1, "", "unfreeze_alpha"], [5, 3, 1, "", "unfreeze_weights"]], "decomon.layers.decomon_layers.DecomonDense": [[5, 3, 1, "", "build"], [5, 3, 1, "", "call"], [5, 3, 1, "", "call_linear"], [5, 3, 1, "", "compute_output_shape"], [5, 3, 1, "", "freeze_alpha"], [5, 3, 1, "", "freeze_weights"], [5, 3, 1, "", "get_linear"], [5, 3, 1, "", "reset_finetuning"], [5, 3, 1, "", "reset_layer"], [5, 3, 1, "", "set_back_bounds"], [5, 3, 1, "", "set_linear"], [5, 3, 1, "", "shared_weights"], [5, 3, 1, "", "unfreeze_alpha"], [5, 3, 1, "", "unfreeze_weights"]], "decomon.layers.decomon_layers.DecomonDropout": [[5, 3, 1, "", "build"], [5, 3, 1, "", "call"], [5, 3, 1, "", "compute_output_shape"]], "decomon.layers.decomon_layers.DecomonFlatten": [[5, 3, 1, "", "build"], [5, 3, 1, "", "call"]], "decomon.layers.decomon_layers.DecomonInputLayer": [[5, 3, 1, "", "call"], [5, 3, 1, "", "compute_output_shape"], [5, 3, 1, "", "get_linear"]], "decomon.layers.decomon_merge_layers": [[5, 2, 1, "", "DecomonAdd"], [5, 2, 1, "", "DecomonAverage"], [5, 2, 1, "", "DecomonConcatenate"], [5, 2, 1, "", "DecomonDot"], [5, 2, 1, "", "DecomonMaximum"], [5, 2, 1, "", "DecomonMinimum"], [5, 2, 1, "", "DecomonMultiply"], [5, 2, 1, "", "DecomonSubtract"], [5, 1, 1, "", "to_monotonic_merge"]], "decomon.layers.decomon_merge_layers.DecomonAdd": [[5, 3, 1, "", "build"], [5, 3, 1, "", "call"], [5, 3, 1, "", "call_dumb"], [5, 3, 1, "", "compute_output_shape"]], "decomon.layers.decomon_merge_layers.DecomonAverage": [[5, 3, 1, "", "build"], [5, 3, 1, "", "call"], [5, 3, 1, "", "compute_output_shape"]], "decomon.layers.decomon_merge_layers.DecomonConcatenate": [[5, 3, 1, "", "build"], [5, 3, 1, "", "call"], [5, 3, 1, "", "compute_output_shape"]], "decomon.layers.decomon_merge_layers.DecomonDot": [[5, 3, 1, "", "build"], [5, 3, 1, "", "call"]], "decomon.layers.decomon_merge_layers.DecomonMaximum": [[5, 3, 1, "", "call"], [5, 3, 1, "", "compute_output_shape"]], "decomon.layers.decomon_merge_layers.DecomonMinimum": [[5, 3, 1, "", "call"], [5, 3, 1, "", "compute_output_shape"]], "decomon.layers.decomon_merge_layers.DecomonMultiply": [[5, 3, 1, "", "build"], [5, 3, 1, "", "call"]], "decomon.layers.decomon_merge_layers.DecomonSubtract": [[5, 3, 1, "", "call"], [5, 3, 1, "", "compute_output_shape"]], "decomon.layers.decomon_reshape": [[5, 2, 1, "", "DecomonPermute"], [5, 2, 1, "", "DecomonReshape"]], "decomon.layers.decomon_reshape.DecomonPermute": [[5, 3, 1, "", "build"], [5, 3, 1, "", "call"]], "decomon.layers.decomon_reshape.DecomonReshape": [[5, 3, 1, "", "build"], [5, 3, 1, "", "call"]], "decomon.layers.deel_lip": [[5, 2, 1, "", "DecomonGroupSort"], [5, 2, 1, "", "DecomonGroupSort2"]], "decomon.layers.deel_lip.DecomonGroupSort": [[5, 3, 1, "", "call"], [5, 3, 1, "", "compute_output_shape"]], "decomon.layers.deel_lip.DecomonGroupSort2": [[5, 3, 1, "", "build"], [5, 3, 1, "", "call"], [5, 3, 1, "", "compute_output_shape"], [5, 3, 1, "", "reset_layer"]], "decomon.layers.maxpooling": [[5, 4, 1, "", "DecomonMaxPool2d"], [5, 2, 1, "", "DecomonMaxPooling2D"]], "decomon.layers.maxpooling.DecomonMaxPooling2D": [[5, 3, 1, "", "call"], [5, 3, 1, "", "compute_output_shape"]], "decomon.layers.reading_nnet_acas_2_numpy": [[5, 1, 1, "", "convert_nnet_2_numpy"]], "decomon.layers.utils": [[5, 2, 1, "", "ClipAlpha"], [5, 2, 1, "", "ClipAlphaAndSumtoOne"], [5, 2, 1, "", "ClipAlphaGrid"], [5, 2, 1, "", "MultipleConstraint"], [5, 2, 1, "", "NonNeg"], [5, 2, 1, "", "NonPos"], [5, 2, 1, "", "Project_initializer_neg"], [5, 2, 1, "", "Project_initializer_pos"], [5, 1, 1, "", "abs"], [5, 1, 1, "", "broadcast"], [5, 1, 1, "", "compute_L"], [5, 1, 1, "", "compute_R"], [5, 1, 1, "", "exp"], [5, 1, 1, "", "expand_dims"], [5, 1, 1, "", "frac_pos"], [5, 1, 1, "", "frac_pos_hull"], [5, 1, 1, "", "get_coeff_grad"], [5, 1, 1, "", "get_grad"], [5, 1, 1, "", "get_start_point"], [5, 1, 1, "", "grad_descent"], [5, 1, 1, "", "grad_descent_conv"], [5, 1, 1, "", "linear_to_softmax"], [5, 1, 1, "", "log"], [5, 1, 1, "", "max_"], [5, 1, 1, "", "min_"], [5, 1, 1, "", "multiply"], [5, 1, 1, "", "multiply_old"], [5, 1, 1, "", "permute_dimensions"], [5, 1, 1, "", "pow"], [5, 1, 1, "", "softmax_to_linear"], [5, 1, 1, "", "softplus_"], [5, 1, 1, "", "sort"], [5, 1, 1, "", "split"], [5, 1, 1, "", "sum"]], "decomon.loading": [[6, 0, 0, "-", "load_onnx"]], "decomon.loading.load_onnx": [[6, 1, 1, "", "check_compatibility_data_format"], [6, 1, 1, "", "clone"], [6, 1, 1, "", "clone_first_2_last"], [6, 1, 1, "", "get_all_input_names"], [6, 1, 1, "", "get_data_format"], [6, 1, 1, "", "get_input_transpose"], [6, 1, 1, "", "get_parents_format_"], [6, 1, 1, "", "get_tensor_input"], [6, 1, 1, "", "load_onnx_2_keras"], [6, 1, 1, "", "update_dico"]], "decomon.metrics": [[7, 0, 0, "-", "complexity"], [7, 0, 0, "-", "coverage"], [7, 0, 0, "-", "loss"], [7, 0, 0, "-", "metric"], [7, 0, 0, "-", "utils"]], "decomon.metrics.complexity": [[7, 1, 1, "", "get_graph_complexity"]], "decomon.metrics.coverage": [[7, 1, 1, "", "get_adv_coverage_box"]], "decomon.metrics.loss": [[7, 2, 1, "", "DecomonLossFusion"], [7, 2, 1, "", "DecomonRadiusRobust"], [7, 1, 1, "", "build_asymptotic_crossentropy_model"], [7, 1, 1, "", "build_crossentropy_model"], [7, 1, 1, "", "build_radius_robust_model"], [7, 1, 1, "", "get_adv_loss"], [7, 1, 1, "", "get_lower_loss"], [7, 1, 1, "", "get_model"], [7, 1, 1, "", "get_upper_loss"]], "decomon.metrics.loss.DecomonLossFusion": [[7, 3, 1, "", "call"], [7, 3, 1, "", "call_backward"], [7, 3, 1, "", "call_no_backward"], [7, 3, 1, "", "compute_output_shape"]], "decomon.metrics.loss.DecomonRadiusRobust": [[7, 3, 1, "", "call"], [7, 3, 1, "", "call_backward"], [7, 3, 1, "", "call_no_backward"], [7, 3, 1, "", "compute_output_shape"]], "decomon.metrics.metric": [[7, 2, 1, "", "Adversarial_check"], [7, 2, 1, "", "Adversarial_score"], [7, 2, 1, "", "Upper_score"], [7, 1, 1, "", "build_formal_adv_check_model"], [7, 1, 1, "", "build_formal_adv_model"], [7, 1, 1, "", "build_formal_upper_model"]], "decomon.metrics.metric.Adversarial_check": [[7, 3, 1, "", "call"], [7, 3, 1, "", "linear_adv"]], "decomon.metrics.metric.Adversarial_score": [[7, 3, 1, "", "call"], [7, 3, 1, "", "linear_adv"]], "decomon.metrics.metric.Upper_score": [[7, 3, 1, "", "call"], [7, 3, 1, "", "linear_upper"]], "decomon.metrics.utils": [[7, 1, 1, "", "categorical_cross_entropy"]], "decomon.models": [[8, 0, 0, "-", "backward_cloning"], [8, 0, 0, "-", "convert"], [8, 0, 0, "-", "decomon_sequential"], [8, 0, 0, "-", "forward_cloning"], [8, 0, 0, "-", "models"], [8, 0, 0, "-", "utils"]], "decomon.models.backward_cloning": [[8, 1, 1, "", "convert_backward_2_mode"], [8, 1, 1, "", "convert_backward_model"], [8, 1, 1, "", "crown_"], [8, 1, 1, "", "crown_model"], [8, 1, 1, "", "get_backward_model"], [8, 1, 1, "", "get_disconnected_input"], [8, 1, 1, "", "get_fuse"], [8, 1, 1, "", "get_input"], [8, 1, 1, "", "get_input_nodes"], [8, 1, 1, "", "is_purely_linear"], [8, 1, 1, "", "retrieve_layer"]], "decomon.models.convert": [[8, 2, 1, "", "BACKWARD_FEED"], [8, 2, 1, "", "CROWN"], [8, 2, 1, "", "CROWN_FORWARD"], [8, 2, 1, "", "CROWN_HYBRID"], [8, 2, 1, "", "CROWN_IBP"], [8, 2, 1, "", "FORWARD"], [8, 2, 1, "", "FORWARD_FEED"], [8, 2, 1, "", "HYBRID"], [8, 2, 1, "", "IBP"], [8, 1, 1, "", "clone"], [8, 1, 1, "", "convert"], [8, 1, 1, "", "get_direction"], [8, 1, 1, "", "get_ibp_forward_from_method"], [8, 1, 1, "", "switch_mode_mapping"]], "decomon.models.convert.BACKWARD_FEED": [[8, 4, 1, "", "name"]], "decomon.models.convert.CROWN": [[8, 4, 1, "", "name"]], "decomon.models.convert.CROWN_FORWARD": [[8, 4, 1, "", "name"]], "decomon.models.convert.CROWN_HYBRID": [[8, 4, 1, "", "name"]], "decomon.models.convert.CROWN_IBP": [[8, 4, 1, "", "name"]], "decomon.models.convert.FORWARD": [[8, 4, 1, "", "name"]], "decomon.models.convert.FORWARD_FEED": [[8, 4, 1, "", "name"]], "decomon.models.convert.HYBRID": [[8, 4, 1, "", "name"]], "decomon.models.convert.IBP": [[8, 4, 1, "", "name"]], "decomon.models.decomon_sequential": [[8, 2, 1, "", "Backward"], [8, 2, 1, "", "DecomonModel"], [8, 2, 1, "", "DecomonSequential"], [8, 2, 1, "", "Forward"], [8, 1, 1, "", "clone"], [8, 1, 1, "", "clone_functional_model"], [8, 1, 1, "", "clone_sequential_model"], [8, 1, 1, "", "convert"], [8, 1, 1, "", "get_backward"], [8, 1, 1, "", "get_backward_layer"], [8, 1, 1, "", "get_backward_model"], [8, 1, 1, "", "get_backward_model_"], [8, 1, 1, "", "include_dim_layer_fn"], [8, 1, 1, "", "set_domain_priv"]], "decomon.models.decomon_sequential.Backward": [[8, 4, 1, "", "name"]], "decomon.models.decomon_sequential.DecomonModel": [[8, 3, 1, "", "freeze_alpha"], [8, 3, 1, "", "freeze_weights"], [8, 3, 1, "", "reset_finetuning"], [8, 3, 1, "", "set_domain"], [8, 3, 1, "", "unfreeze_alpha"], [8, 3, 1, "", "unfreeze_weights"]], "decomon.models.decomon_sequential.DecomonSequential": [[8, 3, 1, "", "freeze_alpha"], [8, 3, 1, "", "freeze_weights"], [8, 3, 1, "", "reset_finetuning"], [8, 3, 1, "", "set_domain"], [8, 3, 1, "", "unfreeze_alpha"], [8, 3, 1, "", "unfreeze_weights"]], "decomon.models.decomon_sequential.Forward": [[8, 4, 1, "", "name"]], "decomon.models.forward_cloning": [[8, 1, 1, "", "convert_forward"], [8, 1, 1, "", "convert_forward_functional_model"]], "decomon.models.models": [[8, 2, 1, "", "Backward"], [8, 2, 1, "", "DecomonModel"], [8, 2, 1, "", "DecomonSequential"], [8, 2, 1, "", "Forward"], [8, 1, 1, "", "set_domain_priv"]], "decomon.models.models.Backward": [[8, 4, 1, "", "name"]], "decomon.models.models.DecomonModel": [[8, 3, 1, "", "freeze_alpha"], [8, 3, 1, "", "freeze_weights"], [8, 3, 1, "", "reset_finetuning"], [8, 3, 1, "", "set_domain"], [8, 3, 1, "", "unfreeze_alpha"], [8, 3, 1, "", "unfreeze_weights"]], "decomon.models.models.DecomonSequential": [[8, 3, 1, "", "freeze_alpha"], [8, 3, 1, "", "freeze_weights"], [8, 3, 1, "", "reset_finetuning"], [8, 3, 1, "", "set_domain"], [8, 3, 1, "", "unfreeze_alpha"], [8, 3, 1, "", "unfreeze_weights"]], "decomon.models.models.Forward": [[8, 4, 1, "", "name"]], "decomon.models.utils": [[8, 1, 1, "", "check_input_tensors_functionnal"], [8, 1, 1, "", "check_input_tensors_sequential"], [8, 1, 1, "", "convert_2_mode"], [8, 1, 1, "", "convert_to_backward_bounds"], [8, 1, 1, "", "fuse_forward_backward"], [8, 1, 1, "", "get_FORWARD"], [8, 1, 1, "", "get_IBP"], [8, 1, 1, "", "get_back_bounds_model"], [8, 1, 1, "", "get_depth_dict"], [8, 1, 1, "", "get_inner_layers"], [8, 1, 1, "", "get_input_dim"], [8, 1, 1, "", "get_input_tensor_x"], [8, 1, 1, "", "get_inputs"], [8, 1, 1, "", "get_key"], [8, 1, 1, "", "get_mode"], [8, 1, 1, "", "get_node_by_id"], [8, 1, 1, "", "get_node_by_id_"], [8, 1, 1, "", "get_original_layer_name"], [8, 1, 1, "", "include_dim_layer_fn"], [8, 1, 1, "", "pre_process_inputs"], [8, 1, 1, "", "set_name"]], "decomon.utils": [[0, 2, 1, "", "A_slope"], [0, 2, 1, "", "Ball"], [0, 2, 1, "", "Box"], [0, 2, 1, "", "Grid"], [0, 2, 1, "", "M_BACKWARD"], [0, 2, 1, "", "M_FORWARD"], [0, 2, 1, "", "M_REC_BACKWARD"], [0, 2, 1, "", "O_slope"], [0, 2, 1, "", "S_slope"], [0, 2, 1, "", "V_slope"], [0, 2, 1, "", "Vertex"], [0, 2, 1, "", "Z_slope"], [0, 1, 1, "", "add"], [0, 1, 1, "", "backward_maximum"], [0, 1, 1, "", "backward_minimum"], [0, 1, 1, "", "convert_lower_search_2_subset_sum"], [0, 1, 1, "", "get_AB"], [0, 1, 1, "", "get_AB_finetune"], [0, 1, 1, "", "get_bound_grid"], [0, 1, 1, "", "get_linear_hull_relu"], [0, 1, 1, "", "get_linear_hull_s_shape"], [0, 1, 1, "", "get_linear_hull_sigmoid"], [0, 1, 1, "", "get_linear_hull_tanh"], [0, 1, 1, "", "get_linear_softplus_hull"], [0, 1, 1, "", "get_lower"], [0, 1, 1, "", "get_lower_ball"], [0, 1, 1, "", "get_lower_ball_finetune"], [0, 1, 1, "", "get_lower_bound_grid"], [0, 1, 1, "", "get_lower_box"], [0, 1, 1, "", "get_lower_layer"], [0, 1, 1, "", "get_lower_layer_box"], [0, 1, 1, "", "get_lq_norm"], [0, 1, 1, "", "get_t_lower"], [0, 1, 1, "", "get_t_upper"], [0, 1, 1, "", "get_upper"], [0, 1, 1, "", "get_upper_ball"], [0, 1, 1, "", "get_upper_ball_finetune"], [0, 1, 1, "", "get_upper_bound_grid"], [0, 1, 1, "", "get_upper_box"], [0, 1, 1, "", "get_upper_layer"], [0, 1, 1, "", "get_upper_layer_box"], [0, 1, 1, "", "maximum"], [0, 1, 1, "", "minimum"], [0, 1, 1, "", "minus"], [0, 1, 1, "", "noisy_lower"], [0, 1, 1, "", "noisy_upper"], [0, 1, 1, "", "relu_"], [0, 1, 1, "", "relu_prime"], [0, 1, 1, "", "set_mode"], [0, 1, 1, "", "sigmoid_prime"], [0, 1, 1, "", "softsign_prime"], [0, 1, 1, "", "subset_sum_lower"], [0, 1, 1, "", "substract"], [0, 1, 1, "", "tanh_prime"]], "decomon.utils.A_slope": [[0, 4, 1, "", "name"]], "decomon.utils.Ball": [[0, 4, 1, "", "name"]], "decomon.utils.Box": [[0, 4, 1, "", "name"]], "decomon.utils.Grid": [[0, 4, 1, "", "name"], [0, 4, 1, "", "stable_coeff"]], "decomon.utils.M_BACKWARD": [[0, 4, 1, "", "name"]], "decomon.utils.M_FORWARD": [[0, 4, 1, "", "name"]], "decomon.utils.M_REC_BACKWARD": [[0, 4, 1, "", "name"]], "decomon.utils.O_slope": [[0, 4, 1, "", "name"]], "decomon.utils.S_slope": [[0, 4, 1, "", "name"]], "decomon.utils.V_slope": [[0, 4, 1, "", "name"]], "decomon.utils.Vertex": [[0, 4, 1, "", "name"]], "decomon.utils.Z_slope": [[0, 4, 1, "", "name"]], "decomon.wrapper": [[0, 1, 1, "", "check_adv_box"], [0, 1, 1, "", "get_adv_box"], [0, 1, 1, "", "get_adv_noise"], [0, 1, 1, "", "get_lower_box"], [0, 1, 1, "", "get_lower_noise"], [0, 1, 1, "", "get_range_box"], [0, 1, 1, "", "get_range_noise"], [0, 1, 1, "", "get_upper_box"], [0, 1, 1, "", "get_upper_noise"], [0, 1, 1, "", "refine_box"], [0, 1, 1, "", "refine_boxes"]], "decomon.wrapper_with_tuning": [[0, 1, 1, "", "get_lower_box_tuning"], [0, 1, 1, "", "get_upper_box_tuning"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"decomon": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15], "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "subpackag": [0, 1], "submodul": [0, 2, 3, 4, 5, 6, 7, 8], "util": [0, 3, 4, 5, 7, 8], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "wrapper": [0, 2], "wrapper_with_tun": 0, "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13], "applic": [1, 2], "cv": 2, "backward_lay": 3, "activ": [3, 5], "backward_maxpool": 3, "backward_merg": 3, "backward_reshap": 3, "core": [3, 5], "deel_lip": [3, 5], "corner": 4, "slope": 4, "layer": 5, "decomon_lay": 5, "decomon_merge_lay": 5, "decomon_reshap": 5, "maxpool": 5, "nois": 5, "reading_nnet_acas_2_numpi": 5, "load": 6, "load_onnx": 6, "metric": 7, "complex": 7, "coverag": 7, "loss": 7, "model": 8, "backward_clon": 8, "convert": 8, "decomon_sequenti": 8, "forward_clon": 8, "type": 9, "api": 10, "refer": 10, "contribut": 11, "set": 11, "up": 11, "your": 11, "develop": 11, "environ": [11, 14], "prerequisit": [11, 14], "python": [11, 14], "3": [11, 14, 15], "7": [11, 14], "With": [11, 14], "conda": [11, 14], "all": [11, 14], "platform": [11, 14], "pyenv": [11, 14], "venv": [11, 14], "linux": [11, 14], "maco": [11, 14], "win": [11, 14], "window": [11, 14], "tensorflow": [11, 14], "2": [11, 14, 15], "6": [11, 14], "instal": [11, 14], "from": 11, "sourc": 11, "mode": 11, "build": 11, "doc": 11, "local": 11, "document": 11, "depend": 11, "defin": 11, "variabl": 11, "notebook": 11, "github": 11, "link": 11, "note": 11, "run": 11, "unit": 11, "test": 11, "guidelin": 11, "follow": 11, "when": 11, "prepar": 11, "code": 11, "style": 11, "lint": 11, "titl": 11, "descript": 11, "extract": 11, "colab": 11, "specif": 11, "ad": 11, "write": 11, "In": 11, "docstr": 11, "page": 11, "submit": 11, "pull": 11, "request": 11, "prior": 11, "check": 11, "reorgan": 11, "commit": 11, "get": 12, "start": 12, "automat": 13, "certifi": 13, "perturb": 13, "analysi": 13, "neural": 13, "network": 13, "pip": 14, "librari": 14, "issu": 14, "tutori": 15, "1": 15, "4": 15}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"decomon package": [[0, "decomon-package"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"]], "Submodules": [[0, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"]], "decomon.utils module": [[0, "module-decomon.utils"]], "decomon.wrapper module": [[0, "module-decomon.wrapper"]], "decomon.wrapper_with_tuning module": [[0, "module-decomon.wrapper_with_tuning"]], "Module contents": [[0, "module-decomon"], [1, "module-decomon.applications"], [2, "module-decomon.applications.cv"], [3, "module-decomon.backward_layers"], [4, "module-decomon.corners"], [5, "module-decomon.layers"], [6, "module-decomon.loading"], [7, "module-decomon.metrics"], [8, "module-decomon.models"], [9, "module-decomon.types"]], "Decomon": [[0, "decomon"]], "decomon.applications package": [[1, "decomon-applications-package"]], "decomon.applications.cv package": [[2, "decomon-applications-cv-package"]], "decomon.applications.cv.wrapper module": [[2, "module-decomon.applications.cv.wrapper"]], "decomon.backward_layers package": [[3, "decomon-backward-layers-package"]], "decomon.backward_layers.activations module": [[3, "module-decomon.backward_layers.activations"]], "decomon.backward_layers.backward_layers module": [[3, "module-decomon.backward_layers.backward_layers"]], "decomon.backward_layers.backward_maxpooling module": [[3, "module-decomon.backward_layers.backward_maxpooling"]], "decomon.backward_layers.backward_merge module": [[3, "module-decomon.backward_layers.backward_merge"]], "decomon.backward_layers.backward_reshape module": [[3, "module-decomon.backward_layers.backward_reshape"]], "decomon.backward_layers.core module": [[3, "module-decomon.backward_layers.core"]], "decomon.backward_layers.deel_lip module": [[3, "module-decomon.backward_layers.deel_lip"]], "decomon.backward_layers.utils module": [[3, "module-decomon.backward_layers.utils"]], "decomon.corners package": [[4, "decomon-corners-package"]], "decomon.corners.slope module": [[4, "module-decomon.corners.slope"]], "decomon.corners.utils module": [[4, "module-decomon.corners.utils"]], "decomon.layers package": [[5, "decomon-layers-package"]], "decomon.layers.activations module": [[5, "module-decomon.layers.activations"]], "decomon.layers.core module": [[5, "module-decomon.layers.core"]], "decomon.layers.decomon_layers module": [[5, "module-decomon.layers.decomon_layers"]], "decomon.layers.decomon_merge_layers module": [[5, "module-decomon.layers.decomon_merge_layers"]], "decomon.layers.decomon_reshape module": [[5, "module-decomon.layers.decomon_reshape"]], "decomon.layers.deel_lip module": [[5, "module-decomon.layers.deel_lip"]], "decomon.layers.maxpooling module": [[5, "module-decomon.layers.maxpooling"]], "decomon.layers.noise module": [[5, "module-decomon.layers.noise"]], "decomon.layers.reading_nnet_acas_2_numpy module": [[5, "module-decomon.layers.reading_nnet_acas_2_numpy"]], "decomon.layers.utils module": [[5, "module-decomon.layers.utils"]], "decomon.loading package": [[6, "decomon-loading-package"]], "decomon.loading.load_onnx module": [[6, "module-decomon.loading.load_onnx"]], "decomon.metrics package": [[7, "decomon-metrics-package"]], "decomon.metrics.complexity module": [[7, "module-decomon.metrics.complexity"]], "decomon.metrics.coverage module": [[7, "module-decomon.metrics.coverage"]], "decomon.metrics.loss module": [[7, "module-decomon.metrics.loss"]], "decomon.metrics.metric module": [[7, "module-decomon.metrics.metric"]], "decomon.metrics.utils module": [[7, "module-decomon.metrics.utils"]], "decomon.models package": [[8, "decomon-models-package"]], "decomon.models.backward_cloning module": [[8, "module-decomon.models.backward_cloning"]], "decomon.models.convert module": [[8, "module-decomon.models.convert"]], "decomon.models.decomon_sequential module": [[8, "module-decomon.models.decomon_sequential"]], "decomon.models.forward_cloning module": [[8, "module-decomon.models.forward_cloning"]], "decomon.models.models module": [[8, "module-decomon.models.models"]], "decomon.models.utils module": [[8, "module-decomon.models.utils"]], "decomon.types package": [[9, "decomon-types-package"]], "API Reference": [[10, "api-reference"]], "Contributing": [[11, "contributing"]], "Setting up your development environment": [[11, "setting-up-your-development-environment"]], "Prerequisites": [[11, "prerequisites"], [14, "prerequisites"]], "Python 3.7+ environment": [[11, "python-3-7-environment"], [14, "python-3-7-environment"]], "With conda (all platforms)": [[11, "with-conda-all-platforms"], [14, "with-conda-all-platforms"]], "With pyenv + venv (Linux/MacOS)": [[11, "with-pyenv-venv-linux-macos"], [14, "with-pyenv-venv-linux-macos"]], "With pyenv-win + venv (Windows)": [[11, "with-pyenv-win-venv-windows"], [14, "with-pyenv-win-venv-windows"]], "Tensorflow 2.6+": [[11, "tensorflow-2-6"], [14, "tensorflow-2-6"]], "Installing from source in developer mode": [[11, "installing-from-source-in-developer-mode"]], "Building the docs locally": [[11, "building-the-docs-locally"]], "Install the documentation dependencies": [[11, "install-the-documentation-dependencies"]], "Define environment variables for notebook github links": [[11, "define-environment-variables-for-notebook-github-links"]], "Build the docs": [[11, "build-the-docs"]], "Notes": [[11, null]], "Running unit tests": [[11, "running-unit-tests"]], "Running notebooks as tests": [[11, "running-notebooks-as-tests"]], "Guidelines to follow when preparing a contribution": [[11, "guidelines-to-follow-when-preparing-a-contribution"]], "Coding style and code linting": [[11, "coding-style-and-code-linting"]], "Notebooks": [[11, "notebooks"]], "Title and description extraction": [[11, "title-and-description-extraction"]], "Colab specificities": [[11, "colab-specificities"]], "Adding unit tests": [[11, "adding-unit-tests"]], "Writing the documentation": [[11, "writing-the-documentation"]], "In-code docstrings": [[11, "in-code-docstrings"]], "Doc pages": [[11, "doc-pages"]], "Submitting pull requests": [[11, "submitting-pull-requests"]], "Prior checks": [[11, "prior-checks"]], "Reorganizing commits": [[11, "reorganizing-commits"]], "Getting started": [[12, "getting-started"]], "DecoMon: Automatic Certified Perturbation Analysis of Neural Networks": [[13, "decomon-automatic-certified-perturbation-analysis-of-neural-networks"]], "Contents": [[13, null]], "Installation": [[14, "installation"]], "Pip install decomon library": [[14, "pip-install-decomon-library"]], "Issues": [[14, "issues"]], "Tutorials": [[15, "tutorials"]], "DECOMON tutorial #1": [[15, "decomon-tutorial-1"]], "DECOMON tutorial #2": [[15, "decomon-tutorial-2"]], "DECOMON tutorial #3": [[15, "decomon-tutorial-3"]], "DECOMON tutorial #4": [[15, "decomon-tutorial-4"]]}, "indexentries": {"a_slope (class in decomon.utils)": [[0, "decomon.utils.A_slope"]], "ball (class in decomon.utils)": [[0, "decomon.utils.Ball"]], "box (class in decomon.utils)": [[0, "decomon.utils.Box"]], "grid (class in decomon.utils)": [[0, "decomon.utils.Grid"]], "m_backward (class in decomon.utils)": [[0, "decomon.utils.M_BACKWARD"]], "m_forward (class in decomon.utils)": [[0, "decomon.utils.M_FORWARD"]], "m_rec_backward (class in decomon.utils)": [[0, "decomon.utils.M_REC_BACKWARD"]], "o_slope (class in decomon.utils)": [[0, "decomon.utils.O_slope"]], "s_slope (class in decomon.utils)": [[0, "decomon.utils.S_slope"]], "v_slope (class in decomon.utils)": [[0, "decomon.utils.V_slope"]], "vertex (class in decomon.utils)": [[0, "decomon.utils.Vertex"]], "z_slope (class in decomon.utils)": [[0, "decomon.utils.Z_slope"]], "add() (in module decomon.utils)": [[0, "decomon.utils.add"]], "backward_maximum() (in module decomon.utils)": [[0, "decomon.utils.backward_maximum"]], "backward_minimum() (in module decomon.utils)": [[0, "decomon.utils.backward_minimum"]], "check_adv_box() (in module decomon.wrapper)": [[0, "decomon.wrapper.check_adv_box"]], "convert_lower_search_2_subset_sum() (in module decomon.utils)": [[0, "decomon.utils.convert_lower_search_2_subset_sum"]], "decomon": [[0, "module-decomon"]], "decomon.utils": [[0, "module-decomon.utils"]], "decomon.wrapper": [[0, "module-decomon.wrapper"]], "decomon.wrapper_with_tuning": [[0, "module-decomon.wrapper_with_tuning"]], "get_ab() (in module decomon.utils)": [[0, "decomon.utils.get_AB"]], "get_ab_finetune() (in module decomon.utils)": [[0, "decomon.utils.get_AB_finetune"]], "get_adv_box() (in module decomon.wrapper)": [[0, "decomon.wrapper.get_adv_box"]], "get_adv_noise() (in module decomon.wrapper)": [[0, "decomon.wrapper.get_adv_noise"]], "get_bound_grid() (in module decomon.utils)": [[0, "decomon.utils.get_bound_grid"]], "get_linear_hull_relu() (in module decomon.utils)": [[0, "decomon.utils.get_linear_hull_relu"]], "get_linear_hull_s_shape() (in module decomon.utils)": [[0, "decomon.utils.get_linear_hull_s_shape"]], "get_linear_hull_sigmoid() (in module decomon.utils)": [[0, "decomon.utils.get_linear_hull_sigmoid"]], "get_linear_hull_tanh() (in module decomon.utils)": [[0, "decomon.utils.get_linear_hull_tanh"]], "get_linear_softplus_hull() (in module decomon.utils)": [[0, "decomon.utils.get_linear_softplus_hull"]], "get_lower() (in module decomon.utils)": [[0, "decomon.utils.get_lower"]], "get_lower_ball() (in module decomon.utils)": [[0, "decomon.utils.get_lower_ball"]], "get_lower_ball_finetune() (in module decomon.utils)": [[0, "decomon.utils.get_lower_ball_finetune"]], "get_lower_bound_grid() (in module decomon.utils)": [[0, "decomon.utils.get_lower_bound_grid"]], "get_lower_box() (in module decomon.utils)": [[0, "decomon.utils.get_lower_box"]], "get_lower_box() (in module decomon.wrapper)": [[0, "decomon.wrapper.get_lower_box"]], "get_lower_box_tuning() (in module decomon.wrapper_with_tuning)": [[0, "decomon.wrapper_with_tuning.get_lower_box_tuning"]], "get_lower_layer() (in module decomon.utils)": [[0, "decomon.utils.get_lower_layer"]], "get_lower_layer_box() (in module decomon.utils)": [[0, "decomon.utils.get_lower_layer_box"]], "get_lower_noise() (in module decomon.wrapper)": [[0, "decomon.wrapper.get_lower_noise"]], "get_lq_norm() (in module decomon.utils)": [[0, "decomon.utils.get_lq_norm"]], "get_range_box() (in module decomon.wrapper)": [[0, "decomon.wrapper.get_range_box"]], "get_range_noise() (in module decomon.wrapper)": [[0, "decomon.wrapper.get_range_noise"]], "get_t_lower() (in module decomon.utils)": [[0, "decomon.utils.get_t_lower"]], "get_t_upper() (in module decomon.utils)": [[0, "decomon.utils.get_t_upper"]], "get_upper() (in module decomon.utils)": [[0, "decomon.utils.get_upper"]], "get_upper_ball() (in module decomon.utils)": [[0, "decomon.utils.get_upper_ball"]], "get_upper_ball_finetune() (in module decomon.utils)": [[0, "decomon.utils.get_upper_ball_finetune"]], "get_upper_bound_grid() (in module decomon.utils)": [[0, "decomon.utils.get_upper_bound_grid"]], "get_upper_box() (in module decomon.utils)": [[0, "decomon.utils.get_upper_box"]], "get_upper_box() (in module decomon.wrapper)": [[0, "decomon.wrapper.get_upper_box"]], "get_upper_box_tuning() (in module decomon.wrapper_with_tuning)": [[0, "decomon.wrapper_with_tuning.get_upper_box_tuning"]], "get_upper_layer() (in module decomon.utils)": [[0, "decomon.utils.get_upper_layer"]], "get_upper_layer_box() (in module decomon.utils)": [[0, "decomon.utils.get_upper_layer_box"]], "get_upper_noise() (in module decomon.wrapper)": [[0, "decomon.wrapper.get_upper_noise"]], "maximum() (in module decomon.utils)": [[0, "decomon.utils.maximum"]], "minimum() (in module decomon.utils)": [[0, "decomon.utils.minimum"]], "minus() (in module decomon.utils)": [[0, "decomon.utils.minus"]], "module": [[0, "module-decomon"], [0, "module-decomon.utils"], [0, "module-decomon.wrapper"], [0, "module-decomon.wrapper_with_tuning"], [1, "module-decomon.applications"], [2, "module-decomon.applications.cv"], [2, "module-decomon.applications.cv.wrapper"], [3, "module-decomon.backward_layers"], [3, "module-decomon.backward_layers.activations"], [3, "module-decomon.backward_layers.backward_layers"], [3, "module-decomon.backward_layers.backward_maxpooling"], [3, "module-decomon.backward_layers.backward_merge"], [3, "module-decomon.backward_layers.backward_reshape"], [3, "module-decomon.backward_layers.core"], [3, "module-decomon.backward_layers.deel_lip"], [3, "module-decomon.backward_layers.utils"], [4, "module-decomon.corners"], [4, "module-decomon.corners.slope"], [4, "module-decomon.corners.utils"], [5, "module-decomon.layers"], [5, "module-decomon.layers.activations"], [5, "module-decomon.layers.core"], [5, "module-decomon.layers.decomon_layers"], [5, "module-decomon.layers.decomon_merge_layers"], [5, "module-decomon.layers.decomon_reshape"], [5, "module-decomon.layers.deel_lip"], [5, "module-decomon.layers.maxpooling"], [5, "module-decomon.layers.noise"], [5, "module-decomon.layers.reading_nnet_acas_2_numpy"], [5, "module-decomon.layers.utils"], [6, "module-decomon.loading"], [6, "module-decomon.loading.load_onnx"], [7, "module-decomon.metrics"], [7, "module-decomon.metrics.complexity"], [7, "module-decomon.metrics.coverage"], [7, "module-decomon.metrics.loss"], [7, "module-decomon.metrics.metric"], [7, "module-decomon.metrics.utils"], [8, "module-decomon.models"], [8, "module-decomon.models.backward_cloning"], [8, "module-decomon.models.convert"], [8, "module-decomon.models.decomon_sequential"], [8, "module-decomon.models.forward_cloning"], [8, "module-decomon.models.models"], [8, "module-decomon.models.utils"], [9, "module-decomon.types"]], "name (decomon.utils.a_slope attribute)": [[0, "decomon.utils.A_slope.name"]], "name (decomon.utils.ball attribute)": [[0, "decomon.utils.Ball.name"]], "name (decomon.utils.box attribute)": [[0, "decomon.utils.Box.name"]], "name (decomon.utils.grid attribute)": [[0, "decomon.utils.Grid.name"]], "name (decomon.utils.m_backward attribute)": [[0, "decomon.utils.M_BACKWARD.name"]], "name (decomon.utils.m_forward attribute)": [[0, "decomon.utils.M_FORWARD.name"]], "name (decomon.utils.m_rec_backward attribute)": [[0, "decomon.utils.M_REC_BACKWARD.name"]], "name (decomon.utils.o_slope attribute)": [[0, "decomon.utils.O_slope.name"]], "name (decomon.utils.s_slope attribute)": [[0, "decomon.utils.S_slope.name"]], "name (decomon.utils.v_slope attribute)": [[0, "decomon.utils.V_slope.name"]], "name (decomon.utils.vertex attribute)": [[0, "decomon.utils.Vertex.name"]], "name (decomon.utils.z_slope attribute)": [[0, "decomon.utils.Z_slope.name"]], "noisy_lower() (in module decomon.utils)": [[0, "decomon.utils.noisy_lower"]], "noisy_upper() (in module decomon.utils)": [[0, "decomon.utils.noisy_upper"]], "refine_box() (in module decomon.wrapper)": [[0, "decomon.wrapper.refine_box"]], "refine_boxes() (in module decomon.wrapper)": [[0, "decomon.wrapper.refine_boxes"]], "relu_() (in module decomon.utils)": [[0, "decomon.utils.relu_"]], "relu_prime() (in module decomon.utils)": [[0, "decomon.utils.relu_prime"]], "set_mode() (in module decomon.utils)": [[0, "decomon.utils.set_mode"]], "sigmoid_prime() (in module decomon.utils)": [[0, "decomon.utils.sigmoid_prime"]], "softsign_prime() (in module decomon.utils)": [[0, "decomon.utils.softsign_prime"]], "stable_coeff (decomon.utils.grid attribute)": [[0, "decomon.utils.Grid.stable_coeff"]], "subset_sum_lower() (in module decomon.utils)": [[0, "decomon.utils.subset_sum_lower"]], "substract() (in module decomon.utils)": [[0, "decomon.utils.substract"]], "tanh_prime() (in module decomon.utils)": [[0, "decomon.utils.tanh_prime"]], "decomon.applications": [[1, "module-decomon.applications"]], "decomon.applications.cv": [[2, "module-decomon.applications.cv"]], "decomon.applications.cv.wrapper": [[2, "module-decomon.applications.cv.wrapper"]], "get_adv_brightness() (in module decomon.applications.cv.wrapper)": [[2, "decomon.applications.cv.wrapper.get_adv_brightness"]], "backwardactivation (class in decomon.backward_layers.backward_layers)": [[3, "decomon.backward_layers.backward_layers.BackwardActivation"]], "backwardadd (class in decomon.backward_layers.backward_merge)": [[3, "decomon.backward_layers.backward_merge.BackwardAdd"]], "backwardaverage (class in decomon.backward_layers.backward_merge)": [[3, "decomon.backward_layers.backward_merge.BackwardAverage"]], "backwardbatchnormalization (class in decomon.backward_layers.backward_layers)": [[3, "decomon.backward_layers.backward_layers.BackwardBatchNormalization"]], "backwardconcatenate (class in decomon.backward_layers.backward_merge)": [[3, "decomon.backward_layers.backward_merge.BackwardConcatenate"]], "backwardconv2d (class in decomon.backward_layers.backward_layers)": [[3, "decomon.backward_layers.backward_layers.BackwardConv2D"]], "backwarddense (class in decomon.backward_layers.backward_layers)": [[3, "decomon.backward_layers.backward_layers.BackwardDense"]], "backwarddense (class in decomon.backward_layers.deel_lip)": [[3, "decomon.backward_layers.deel_lip.BackwardDense"]], "backwarddot (class in decomon.backward_layers.backward_merge)": [[3, "decomon.backward_layers.backward_merge.BackwardDot"]], "backwarddropout (class in decomon.backward_layers.backward_layers)": [[3, "decomon.backward_layers.backward_layers.BackwardDropout"]], "backwardflatten (class in decomon.backward_layers.backward_layers)": [[3, "decomon.backward_layers.backward_layers.BackwardFlatten"]], "backwardgroupsort2 (class in decomon.backward_layers.deel_lip)": [[3, "decomon.backward_layers.deel_lip.BackwardGroupSort2"]], "backwardinputlayer (class in decomon.backward_layers.backward_layers)": [[3, "decomon.backward_layers.backward_layers.BackwardInputLayer"]], "backwardlayer (class in decomon.backward_layers.core)": [[3, "decomon.backward_layers.core.BackwardLayer"]], "backwardmaxpooling2d (class in decomon.backward_layers.backward_maxpooling)": [[3, "decomon.backward_layers.backward_maxpooling.BackwardMaxPooling2D"]], "backwardmaximum (class in decomon.backward_layers.backward_merge)": [[3, "decomon.backward_layers.backward_merge.BackwardMaximum"]], "backwardmerge (class in decomon.backward_layers.backward_merge)": [[3, "decomon.backward_layers.backward_merge.BackwardMerge"]], "backwardminimum (class in decomon.backward_layers.backward_merge)": [[3, "decomon.backward_layers.backward_merge.BackwardMinimum"]], "backwardmultiply (class in decomon.backward_layers.backward_merge)": [[3, "decomon.backward_layers.backward_merge.BackwardMultiply"]], "backwardpermute (class in decomon.backward_layers.backward_layers)": [[3, "decomon.backward_layers.backward_layers.BackwardPermute"]], "backwardreshape (class in decomon.backward_layers.backward_layers)": [[3, "decomon.backward_layers.backward_layers.BackwardReshape"]], "backwardsubtract (class in decomon.backward_layers.backward_merge)": [[3, "decomon.backward_layers.backward_merge.BackwardSubtract"]], "backward_add() (in module decomon.backward_layers.utils)": [[3, "decomon.backward_layers.utils.backward_add"]], "backward_elu() (in module decomon.backward_layers.activations)": [[3, "decomon.backward_layers.activations.backward_elu"]], "backward_exponential() (in module decomon.backward_layers.activations)": [[3, "decomon.backward_layers.activations.backward_exponential"]], "backward_hard_sigmoid() (in module decomon.backward_layers.activations)": [[3, "decomon.backward_layers.activations.backward_hard_sigmoid"]], "backward_linear() (in module decomon.backward_layers.activations)": [[3, "decomon.backward_layers.activations.backward_linear"]], "backward_linear_prod() (in module decomon.backward_layers.utils)": [[3, "decomon.backward_layers.utils.backward_linear_prod"]], "backward_max_() (in module decomon.backward_layers.utils)": [[3, "decomon.backward_layers.utils.backward_max_"]], "backward_maximum() (in module decomon.backward_layers.utils)": [[3, "decomon.backward_layers.utils.backward_maximum"]], "backward_minimum() (in module decomon.backward_layers.utils)": [[3, "decomon.backward_layers.utils.backward_minimum"]], "backward_minus() (in module decomon.backward_layers.utils)": [[3, "decomon.backward_layers.utils.backward_minus"]], "backward_multiply() (in module decomon.backward_layers.utils)": [[3, "decomon.backward_layers.utils.backward_multiply"]], "backward_relu() (in module decomon.backward_layers.activations)": [[3, "decomon.backward_layers.activations.backward_relu"]], "backward_relu_() (in module decomon.backward_layers.utils)": [[3, "decomon.backward_layers.utils.backward_relu_"]], "backward_scale() (in module decomon.backward_layers.utils)": [[3, "decomon.backward_layers.utils.backward_scale"]], "backward_selu() (in module decomon.backward_layers.activations)": [[3, "decomon.backward_layers.activations.backward_selu"]], "backward_sigmoid() (in module decomon.backward_layers.activations)": [[3, "decomon.backward_layers.activations.backward_sigmoid"]], "backward_softmax() (in module decomon.backward_layers.activations)": [[3, "decomon.backward_layers.activations.backward_softmax"]], "backward_softplus() (in module decomon.backward_layers.activations)": [[3, "decomon.backward_layers.activations.backward_softplus"]], "backward_softplus_() (in module decomon.backward_layers.utils)": [[3, "decomon.backward_layers.utils.backward_softplus_"]], "backward_softsign() (in module decomon.backward_layers.activations)": [[3, "decomon.backward_layers.activations.backward_softsign"]], "backward_softsign_() (in module decomon.backward_layers.activations)": [[3, "decomon.backward_layers.activations.backward_softsign_"]], "backward_sort() (in module decomon.backward_layers.utils)": [[3, "decomon.backward_layers.utils.backward_sort"]], "backward_substract() (in module decomon.backward_layers.utils)": [[3, "decomon.backward_layers.utils.backward_substract"]], "backward_tanh() (in module decomon.backward_layers.activations)": [[3, "decomon.backward_layers.activations.backward_tanh"]], "build() (decomon.backward_layers.backward_layers.backwardactivation method)": [[3, "decomon.backward_layers.backward_layers.BackwardActivation.build"]], "build() (decomon.backward_layers.backward_layers.backwardconv2d method)": [[3, "decomon.backward_layers.backward_layers.BackwardConv2D.build"]], "build() (decomon.backward_layers.backward_layers.backwarddense method)": [[3, "decomon.backward_layers.backward_layers.BackwardDense.build"]], "call() (decomon.backward_layers.backward_layers.backwardactivation method)": [[3, "decomon.backward_layers.backward_layers.BackwardActivation.call"]], "call() (decomon.backward_layers.backward_layers.backwardbatchnormalization method)": [[3, "decomon.backward_layers.backward_layers.BackwardBatchNormalization.call"]], "call() (decomon.backward_layers.backward_layers.backwardconv2d method)": [[3, "decomon.backward_layers.backward_layers.BackwardConv2D.call"]], "call() (decomon.backward_layers.backward_layers.backwarddense method)": [[3, "decomon.backward_layers.backward_layers.BackwardDense.call"]], "call() (decomon.backward_layers.backward_layers.backwarddropout method)": [[3, "decomon.backward_layers.backward_layers.BackwardDropout.call"]], "call() (decomon.backward_layers.backward_layers.backwardflatten method)": [[3, "decomon.backward_layers.backward_layers.BackwardFlatten.call"]], "call() (decomon.backward_layers.backward_layers.backwardinputlayer method)": [[3, "decomon.backward_layers.backward_layers.BackwardInputLayer.call"]], "call() (decomon.backward_layers.backward_layers.backwardpermute method)": [[3, "decomon.backward_layers.backward_layers.BackwardPermute.call"]], "call() (decomon.backward_layers.backward_layers.backwardreshape method)": [[3, "decomon.backward_layers.backward_layers.BackwardReshape.call"]], "call() (decomon.backward_layers.backward_maxpooling.backwardmaxpooling2d method)": [[3, "decomon.backward_layers.backward_maxpooling.BackwardMaxPooling2D.call"]], "call() (decomon.backward_layers.backward_merge.backwardadd method)": [[3, "decomon.backward_layers.backward_merge.BackwardAdd.call"]], "call() (decomon.backward_layers.backward_merge.backwardaverage method)": [[3, "decomon.backward_layers.backward_merge.BackwardAverage.call"]], "call() (decomon.backward_layers.backward_merge.backwardconcatenate method)": [[3, "decomon.backward_layers.backward_merge.BackwardConcatenate.call"]], "call() (decomon.backward_layers.backward_merge.backwarddot method)": [[3, "decomon.backward_layers.backward_merge.BackwardDot.call"]], "call() (decomon.backward_layers.backward_merge.backwardmaximum method)": [[3, "decomon.backward_layers.backward_merge.BackwardMaximum.call"]], "call() (decomon.backward_layers.backward_merge.backwardminimum method)": [[3, "decomon.backward_layers.backward_merge.BackwardMinimum.call"]], "call() (decomon.backward_layers.backward_merge.backwardmultiply method)": [[3, "decomon.backward_layers.backward_merge.BackwardMultiply.call"]], "call() (decomon.backward_layers.backward_merge.backwardsubtract method)": [[3, "decomon.backward_layers.backward_merge.BackwardSubtract.call"]], "call_no_previous() (decomon.backward_layers.backward_layers.backwardactivation method)": [[3, "decomon.backward_layers.backward_layers.BackwardActivation.call_no_previous"]], "call_no_previous() (decomon.backward_layers.backward_layers.backwardconv2d method)": [[3, "decomon.backward_layers.backward_layers.BackwardConv2D.call_no_previous"]], "call_no_previous() (decomon.backward_layers.backward_layers.backwarddense method)": [[3, "decomon.backward_layers.backward_layers.BackwardDense.call_no_previous"]], "call_no_previous() (decomon.backward_layers.backward_layers.backwardinputlayer method)": [[3, "decomon.backward_layers.backward_layers.BackwardInputLayer.call_no_previous"]], "call_no_previous() (decomon.backward_layers.backward_layers.backwardreshape method)": [[3, "decomon.backward_layers.backward_layers.BackwardReshape.call_no_previous"]], "call_no_previous() (decomon.backward_layers.backward_merge.backwardadd method)": [[3, "decomon.backward_layers.backward_merge.BackwardAdd.call_no_previous"]], "call_no_previous() (decomon.backward_layers.backward_merge.backwardaverage method)": [[3, "decomon.backward_layers.backward_merge.BackwardAverage.call_no_previous"]], "call_previous() (decomon.backward_layers.backward_layers.backwardactivation method)": [[3, "decomon.backward_layers.backward_layers.BackwardActivation.call_previous"]], "call_previous() (decomon.backward_layers.backward_layers.backwardconv2d method)": [[3, "decomon.backward_layers.backward_layers.BackwardConv2D.call_previous"]], "call_previous() (decomon.backward_layers.backward_layers.backwarddense method)": [[3, "decomon.backward_layers.backward_layers.BackwardDense.call_previous"]], "call_previous() (decomon.backward_layers.backward_layers.backwardinputlayer method)": [[3, "decomon.backward_layers.backward_layers.BackwardInputLayer.call_previous"]], "call_previous() (decomon.backward_layers.backward_layers.backwardreshape method)": [[3, "decomon.backward_layers.backward_layers.BackwardReshape.call_previous"]], "call_previous() (decomon.backward_layers.backward_merge.backwardadd method)": [[3, "decomon.backward_layers.backward_merge.BackwardAdd.call_previous"]], "call_previous() (decomon.backward_layers.backward_merge.backwardaverage method)": [[3, "decomon.backward_layers.backward_merge.BackwardAverage.call_previous"]], "call_previous() (decomon.backward_layers.deel_lip.backwardgroupsort2 method)": [[3, "decomon.backward_layers.deel_lip.BackwardGroupSort2.call_previous"]], "decomon.backward_layers": [[3, "module-decomon.backward_layers"]], "decomon.backward_layers.activations": [[3, "module-decomon.backward_layers.activations"]], "decomon.backward_layers.backward_layers": [[3, "module-decomon.backward_layers.backward_layers"]], "decomon.backward_layers.backward_maxpooling": [[3, "module-decomon.backward_layers.backward_maxpooling"]], "decomon.backward_layers.backward_merge": [[3, "module-decomon.backward_layers.backward_merge"]], "decomon.backward_layers.backward_reshape": [[3, "module-decomon.backward_layers.backward_reshape"]], "decomon.backward_layers.core": [[3, "module-decomon.backward_layers.core"]], "decomon.backward_layers.deel_lip": [[3, "module-decomon.backward_layers.deel_lip"]], "decomon.backward_layers.utils": [[3, "module-decomon.backward_layers.utils"]], "deserialize() (in module decomon.backward_layers.activations)": [[3, "decomon.backward_layers.activations.deserialize"]], "freeze_alpha() (decomon.backward_layers.backward_layers.backwardactivation method)": [[3, "decomon.backward_layers.backward_layers.BackwardActivation.freeze_alpha"]], "freeze_alpha() (decomon.backward_layers.backward_layers.backwardconv2d method)": [[3, "decomon.backward_layers.backward_layers.BackwardConv2D.freeze_alpha"]], "freeze_alpha() (decomon.backward_layers.backward_layers.backwarddense method)": [[3, "decomon.backward_layers.backward_layers.BackwardDense.freeze_alpha"]], "freeze_grid() (decomon.backward_layers.backward_layers.backwardactivation method)": [[3, "decomon.backward_layers.backward_layers.BackwardActivation.freeze_grid"]], "freeze_weights() (decomon.backward_layers.backward_layers.backwardconv2d method)": [[3, "decomon.backward_layers.backward_layers.BackwardConv2D.freeze_weights"]], "freeze_weights() (decomon.backward_layers.backward_layers.backwarddense method)": [[3, "decomon.backward_layers.backward_layers.BackwardDense.freeze_weights"]], "get() (in module decomon.backward_layers.activations)": [[3, "decomon.backward_layers.activations.get"]], "get_forward() (in module decomon.backward_layers.utils)": [[3, "decomon.backward_layers.utils.get_FORWARD"]], "get_ibp() (in module decomon.backward_layers.utils)": [[3, "decomon.backward_layers.utils.get_IBP"]], "get_backward() (in module decomon.backward_layers.backward_layers)": [[3, "decomon.backward_layers.backward_layers.get_backward"]], "get_bounds_linear() (decomon.backward_layers.backward_layers.backwardconv2d method)": [[3, "decomon.backward_layers.backward_layers.BackwardConv2D.get_bounds_linear"]], "get_identity_lirpa() (in module decomon.backward_layers.utils)": [[3, "decomon.backward_layers.utils.get_identity_lirpa"]], "get_input_dim() (in module decomon.backward_layers.utils)": [[3, "decomon.backward_layers.utils.get_input_dim"]], "join() (in module decomon.backward_layers.backward_layers)": [[3, "decomon.backward_layers.backward_layers.join"]], "merge_with_previous() (in module decomon.backward_layers.utils)": [[3, "decomon.backward_layers.utils.merge_with_previous"]], "reset_finetuning() (decomon.backward_layers.backward_layers.backwardconv2d method)": [[3, "decomon.backward_layers.backward_layers.BackwardConv2D.reset_finetuning"]], "reset_finetuning() (decomon.backward_layers.backward_layers.backwarddense method)": [[3, "decomon.backward_layers.backward_layers.BackwardDense.reset_finetuning"]], "set_previous() (decomon.backward_layers.core.backwardlayer method)": [[3, "decomon.backward_layers.core.BackwardLayer.set_previous"]], "unfreeze_alpha() (decomon.backward_layers.backward_layers.backwardactivation method)": [[3, "decomon.backward_layers.backward_layers.BackwardActivation.unfreeze_alpha"]], "unfreeze_alpha() (decomon.backward_layers.backward_layers.backwardconv2d method)": [[3, "decomon.backward_layers.backward_layers.BackwardConv2D.unfreeze_alpha"]], "unfreeze_alpha() (decomon.backward_layers.backward_layers.backwarddense method)": [[3, "decomon.backward_layers.backward_layers.BackwardDense.unfreeze_alpha"]], "unfreeze_grid() (decomon.backward_layers.backward_layers.backwardactivation method)": [[3, "decomon.backward_layers.backward_layers.BackwardActivation.unfreeze_grid"]], "unfreeze_weights() (decomon.backward_layers.backward_layers.backwardconv2d method)": [[3, "decomon.backward_layers.backward_layers.BackwardConv2D.unfreeze_weights"]], "unfreeze_weights() (decomon.backward_layers.backward_layers.backwarddense method)": [[3, "decomon.backward_layers.backward_layers.BackwardDense.unfreeze_weights"]], "decomon.corners": [[4, "module-decomon.corners"]], "decomon.corners.slope": [[4, "module-decomon.corners.slope"]], "decomon.corners.utils": [[4, "module-decomon.corners.utils"]], "get_bound_grid_lagrangian() (in module decomon.corners.utils)": [[4, "decomon.corners.utils.get_bound_grid_lagrangian"]], "get_linear_lower_slope_relu() (in module decomon.corners.slope)": [[4, "decomon.corners.slope.get_linear_lower_slope_relu"]], "get_lower_bound_grid_lagrangian() (in module decomon.corners.utils)": [[4, "decomon.corners.utils.get_lower_bound_grid_lagrangian"]], "get_upper_bound_grid_lagrangian() (in module decomon.corners.utils)": [[4, "decomon.corners.utils.get_upper_bound_grid_lagrangian"]], "ball (class in decomon.layers.core)": [[5, "decomon.layers.core.Ball"]], "box (class in decomon.layers.core)": [[5, "decomon.layers.core.Box"]], "clipalpha (class in decomon.layers.utils)": [[5, "decomon.layers.utils.ClipAlpha"]], "clipalphaandsumtoone (class in decomon.layers.utils)": [[5, "decomon.layers.utils.ClipAlphaAndSumtoOne"]], "clipalphagrid (class in decomon.layers.utils)": [[5, "decomon.layers.utils.ClipAlphaGrid"]], "deel_lip (class in decomon.layers.core)": [[5, "decomon.layers.core.DEEL_LIP"]], "decomonactivation (class in decomon.layers.decomon_layers)": [[5, "decomon.layers.decomon_layers.DecomonActivation"]], "decomonadd (class in decomon.layers.decomon_merge_layers)": [[5, "decomon.layers.decomon_merge_layers.DecomonAdd"]], "decomonaverage (class in decomon.layers.decomon_merge_layers)": [[5, "decomon.layers.decomon_merge_layers.DecomonAverage"]], "decomonbatchnormalization (class in decomon.layers.decomon_layers)": [[5, "decomon.layers.decomon_layers.DecomonBatchNormalization"]], "decomonconcatenate (class in decomon.layers.decomon_merge_layers)": [[5, "decomon.layers.decomon_merge_layers.DecomonConcatenate"]], "decomonconv2d (class in decomon.layers.decomon_layers)": [[5, "decomon.layers.decomon_layers.DecomonConv2D"]], "decomondense (class in decomon.layers.decomon_layers)": [[5, "decomon.layers.decomon_layers.DecomonDense"]], "decomondot (class in decomon.layers.decomon_merge_layers)": [[5, "decomon.layers.decomon_merge_layers.DecomonDot"]], "decomondropout (class in decomon.layers.decomon_layers)": [[5, "decomon.layers.decomon_layers.DecomonDropout"]], "decomonflatten (class in decomon.layers.decomon_layers)": [[5, "decomon.layers.decomon_layers.DecomonFlatten"]], "decomongroupsort (class in decomon.layers.deel_lip)": [[5, "decomon.layers.deel_lip.DecomonGroupSort"]], "decomongroupsort2 (class in decomon.layers.deel_lip)": [[5, "decomon.layers.deel_lip.DecomonGroupSort2"]], "decomoninputlayer (class in decomon.layers.decomon_layers)": [[5, "decomon.layers.decomon_layers.DecomonInputLayer"]], "decomonlayer (class in decomon.layers.core)": [[5, "decomon.layers.core.DecomonLayer"]], "decomonmaxpool2d (in module decomon.layers.maxpooling)": [[5, "decomon.layers.maxpooling.DecomonMaxPool2d"]], "decomonmaxpooling2d (class in decomon.layers.maxpooling)": [[5, "decomon.layers.maxpooling.DecomonMaxPooling2D"]], "decomonmaximum (class in decomon.layers.decomon_merge_layers)": [[5, "decomon.layers.decomon_merge_layers.DecomonMaximum"]], "decomonminimum (class in decomon.layers.decomon_merge_layers)": [[5, "decomon.layers.decomon_merge_layers.DecomonMinimum"]], "decomonmultiply (class in decomon.layers.decomon_merge_layers)": [[5, "decomon.layers.decomon_merge_layers.DecomonMultiply"]], "decomonpermute (class in decomon.layers.decomon_reshape)": [[5, "decomon.layers.decomon_reshape.DecomonPermute"]], "decomonreshape (class in decomon.layers.decomon_reshape)": [[5, "decomon.layers.decomon_reshape.DecomonReshape"]], "decomonsubtract (class in decomon.layers.decomon_merge_layers)": [[5, "decomon.layers.decomon_merge_layers.DecomonSubtract"]], "f_forward (class in decomon.layers.core)": [[5, "decomon.layers.core.F_FORWARD"]], "f_hybrid (class in decomon.layers.core)": [[5, "decomon.layers.core.F_HYBRID"]], "f_ibp (class in decomon.layers.core)": [[5, "decomon.layers.core.F_IBP"]], "grid (class in decomon.layers.core)": [[5, "decomon.layers.core.Grid"]], "monotonicconvolution2d (in module decomon.layers.decomon_layers)": [[5, "decomon.layers.decomon_layers.MonotonicConvolution2D"]], "multipleconstraint (class in decomon.layers.utils)": [[5, "decomon.layers.utils.MultipleConstraint"]], "nonneg (class in decomon.layers.utils)": [[5, "decomon.layers.utils.NonNeg"]], "nonpos (class in decomon.layers.utils)": [[5, "decomon.layers.utils.NonPos"]], "option (class in decomon.layers.core)": [[5, "decomon.layers.core.Option"]], "project_initializer_neg (class in decomon.layers.utils)": [[5, "decomon.layers.utils.Project_initializer_neg"]], "project_initializer_pos (class in decomon.layers.utils)": [[5, "decomon.layers.utils.Project_initializer_pos"]], "staticvariables (class in decomon.layers.core)": [[5, "decomon.layers.core.StaticVariables"]], "vertex (class in decomon.layers.core)": [[5, "decomon.layers.core.Vertex"]], "abs() (in module decomon.layers.utils)": [[5, "decomon.layers.utils.abs"]], "broadcast() (in module decomon.layers.utils)": [[5, "decomon.layers.utils.broadcast"]], "build() (decomon.layers.core.decomonlayer method)": [[5, "decomon.layers.core.DecomonLayer.build"]], "build() (decomon.layers.decomon_layers.decomonactivation method)": [[5, "decomon.layers.decomon_layers.DecomonActivation.build"]], "build() (decomon.layers.decomon_layers.decomonbatchnormalization method)": [[5, "decomon.layers.decomon_layers.DecomonBatchNormalization.build"]], "build() (decomon.layers.decomon_layers.decomonconv2d method)": [[5, "decomon.layers.decomon_layers.DecomonConv2D.build"]], "build() (decomon.layers.decomon_layers.decomondense method)": [[5, "decomon.layers.decomon_layers.DecomonDense.build"]], "build() (decomon.layers.decomon_layers.decomondropout method)": [[5, "decomon.layers.decomon_layers.DecomonDropout.build"]], "build() (decomon.layers.decomon_layers.decomonflatten method)": [[5, "decomon.layers.decomon_layers.DecomonFlatten.build"]], "build() (decomon.layers.decomon_merge_layers.decomonadd method)": [[5, "decomon.layers.decomon_merge_layers.DecomonAdd.build"]], "build() (decomon.layers.decomon_merge_layers.decomonaverage method)": [[5, "decomon.layers.decomon_merge_layers.DecomonAverage.build"]], "build() (decomon.layers.decomon_merge_layers.decomonconcatenate method)": [[5, "decomon.layers.decomon_merge_layers.DecomonConcatenate.build"]], "build() (decomon.layers.decomon_merge_layers.decomondot method)": [[5, "decomon.layers.decomon_merge_layers.DecomonDot.build"]], "build() (decomon.layers.decomon_merge_layers.decomonmultiply method)": [[5, "decomon.layers.decomon_merge_layers.DecomonMultiply.build"]], "build() (decomon.layers.decomon_reshape.decomonpermute method)": [[5, "decomon.layers.decomon_reshape.DecomonPermute.build"]], "build() (decomon.layers.decomon_reshape.decomonreshape method)": [[5, "decomon.layers.decomon_reshape.DecomonReshape.build"]], "build() (decomon.layers.deel_lip.decomongroupsort2 method)": [[5, "decomon.layers.deel_lip.DecomonGroupSort2.build"]], "call() (decomon.layers.core.decomonlayer method)": [[5, "decomon.layers.core.DecomonLayer.call"]], "call() (decomon.layers.decomon_layers.decomonactivation method)": [[5, "decomon.layers.decomon_layers.DecomonActivation.call"]], "call() (decomon.layers.decomon_layers.decomonbatchnormalization method)": [[5, "decomon.layers.decomon_layers.DecomonBatchNormalization.call"]], "call() (decomon.layers.decomon_layers.decomonconv2d method)": [[5, "decomon.layers.decomon_layers.DecomonConv2D.call"]], "call() (decomon.layers.decomon_layers.decomondense method)": [[5, "decomon.layers.decomon_layers.DecomonDense.call"]], "call() (decomon.layers.decomon_layers.decomondropout method)": [[5, "decomon.layers.decomon_layers.DecomonDropout.call"]], "call() (decomon.layers.decomon_layers.decomonflatten method)": [[5, "decomon.layers.decomon_layers.DecomonFlatten.call"]], "call() (decomon.layers.decomon_layers.decomoninputlayer method)": [[5, "decomon.layers.decomon_layers.DecomonInputLayer.call"]], "call() (decomon.layers.decomon_merge_layers.decomonadd method)": [[5, "decomon.layers.decomon_merge_layers.DecomonAdd.call"]], "call() (decomon.layers.decomon_merge_layers.decomonaverage method)": [[5, "decomon.layers.decomon_merge_layers.DecomonAverage.call"]], "call() (decomon.layers.decomon_merge_layers.decomonconcatenate method)": [[5, "decomon.layers.decomon_merge_layers.DecomonConcatenate.call"]], "call() (decomon.layers.decomon_merge_layers.decomondot method)": [[5, "decomon.layers.decomon_merge_layers.DecomonDot.call"]], "call() (decomon.layers.decomon_merge_layers.decomonmaximum method)": [[5, "decomon.layers.decomon_merge_layers.DecomonMaximum.call"]], "call() (decomon.layers.decomon_merge_layers.decomonminimum method)": [[5, "decomon.layers.decomon_merge_layers.DecomonMinimum.call"]], "call() (decomon.layers.decomon_merge_layers.decomonmultiply method)": [[5, "decomon.layers.decomon_merge_layers.DecomonMultiply.call"]], "call() (decomon.layers.decomon_merge_layers.decomonsubtract method)": [[5, "decomon.layers.decomon_merge_layers.DecomonSubtract.call"]], "call() (decomon.layers.decomon_reshape.decomonpermute method)": [[5, "decomon.layers.decomon_reshape.DecomonPermute.call"]], "call() (decomon.layers.decomon_reshape.decomonreshape method)": [[5, "decomon.layers.decomon_reshape.DecomonReshape.call"]], "call() (decomon.layers.deel_lip.decomongroupsort method)": [[5, "decomon.layers.deel_lip.DecomonGroupSort.call"]], "call() (decomon.layers.deel_lip.decomongroupsort2 method)": [[5, "decomon.layers.deel_lip.DecomonGroupSort2.call"]], "call() (decomon.layers.maxpooling.decomonmaxpooling2d method)": [[5, "decomon.layers.maxpooling.DecomonMaxPooling2D.call"]], "call_dumb() (decomon.layers.decomon_merge_layers.decomonadd method)": [[5, "decomon.layers.decomon_merge_layers.DecomonAdd.call_dumb"]], "call_linear() (decomon.layers.decomon_layers.decomonconv2d method)": [[5, "decomon.layers.decomon_layers.DecomonConv2D.call_linear"]], "call_linear() (decomon.layers.decomon_layers.decomondense method)": [[5, "decomon.layers.decomon_layers.DecomonDense.call_linear"]], "compute_l() (in module decomon.layers.utils)": [[5, "decomon.layers.utils.compute_L"]], "compute_r() (in module decomon.layers.utils)": [[5, "decomon.layers.utils.compute_R"]], "compute_output_shape() (decomon.layers.core.decomonlayer method)": [[5, "decomon.layers.core.DecomonLayer.compute_output_shape"]], "compute_output_shape() (decomon.layers.decomon_layers.decomonbatchnormalization method)": [[5, "decomon.layers.decomon_layers.DecomonBatchNormalization.compute_output_shape"]], "compute_output_shape() (decomon.layers.decomon_layers.decomonconv2d method)": [[5, "decomon.layers.decomon_layers.DecomonConv2D.compute_output_shape"]], "compute_output_shape() (decomon.layers.decomon_layers.decomondense method)": [[5, "decomon.layers.decomon_layers.DecomonDense.compute_output_shape"]], "compute_output_shape() (decomon.layers.decomon_layers.decomondropout method)": [[5, "decomon.layers.decomon_layers.DecomonDropout.compute_output_shape"]], "compute_output_shape() (decomon.layers.decomon_layers.decomoninputlayer method)": [[5, "decomon.layers.decomon_layers.DecomonInputLayer.compute_output_shape"]], "compute_output_shape() (decomon.layers.decomon_merge_layers.decomonadd method)": [[5, "decomon.layers.decomon_merge_layers.DecomonAdd.compute_output_shape"]], "compute_output_shape() (decomon.layers.decomon_merge_layers.decomonaverage method)": [[5, "decomon.layers.decomon_merge_layers.DecomonAverage.compute_output_shape"]], "compute_output_shape() (decomon.layers.decomon_merge_layers.decomonconcatenate method)": [[5, "decomon.layers.decomon_merge_layers.DecomonConcatenate.compute_output_shape"]], "compute_output_shape() (decomon.layers.decomon_merge_layers.decomonmaximum method)": [[5, "decomon.layers.decomon_merge_layers.DecomonMaximum.compute_output_shape"]], "compute_output_shape() (decomon.layers.decomon_merge_layers.decomonminimum method)": [[5, "decomon.layers.decomon_merge_layers.DecomonMinimum.compute_output_shape"]], "compute_output_shape() (decomon.layers.decomon_merge_layers.decomonsubtract method)": [[5, "decomon.layers.decomon_merge_layers.DecomonSubtract.compute_output_shape"]], "compute_output_shape() (decomon.layers.deel_lip.decomongroupsort method)": [[5, "decomon.layers.deel_lip.DecomonGroupSort.compute_output_shape"]], "compute_output_shape() (decomon.layers.deel_lip.decomongroupsort2 method)": [[5, "decomon.layers.deel_lip.DecomonGroupSort2.compute_output_shape"]], "compute_output_shape() (decomon.layers.maxpooling.decomonmaxpooling2d method)": [[5, "decomon.layers.maxpooling.DecomonMaxPooling2D.compute_output_shape"]], "convert_nnet_2_numpy() (in module decomon.layers.reading_nnet_acas_2_numpy)": [[5, "decomon.layers.reading_nnet_acas_2_numpy.convert_nnet_2_numpy"]], "decomon.layers": [[5, "module-decomon.layers"]], "decomon.layers.activations": [[5, "module-decomon.layers.activations"]], "decomon.layers.core": [[5, "module-decomon.layers.core"]], "decomon.layers.decomon_layers": [[5, "module-decomon.layers.decomon_layers"]], "decomon.layers.decomon_merge_layers": [[5, "module-decomon.layers.decomon_merge_layers"]], "decomon.layers.decomon_reshape": [[5, "module-decomon.layers.decomon_reshape"]], "decomon.layers.deel_lip": [[5, "module-decomon.layers.deel_lip"]], "decomon.layers.maxpooling": [[5, "module-decomon.layers.maxpooling"]], "decomon.layers.noise": [[5, "module-decomon.layers.noise"]], "decomon.layers.reading_nnet_acas_2_numpy": [[5, "module-decomon.layers.reading_nnet_acas_2_numpy"]], "decomon.layers.utils": [[5, "module-decomon.layers.utils"]], "deserialize() (in module decomon.layers.activations)": [[5, "decomon.layers.activations.deserialize"]], "elu() (in module decomon.layers.activations)": [[5, "decomon.layers.activations.elu"]], "exp() (in module decomon.layers.utils)": [[5, "decomon.layers.utils.exp"]], "expand_dims() (in module decomon.layers.utils)": [[5, "decomon.layers.utils.expand_dims"]], "exponential() (in module decomon.layers.activations)": [[5, "decomon.layers.activations.exponential"]], "frac_pos() (in module decomon.layers.utils)": [[5, "decomon.layers.utils.frac_pos"]], "frac_pos_hull() (in module decomon.layers.utils)": [[5, "decomon.layers.utils.frac_pos_hull"]], "freeze_alpha() (decomon.layers.core.decomonlayer method)": [[5, "decomon.layers.core.DecomonLayer.freeze_alpha"]], "freeze_alpha() (decomon.layers.decomon_layers.decomonactivation method)": [[5, "decomon.layers.decomon_layers.DecomonActivation.freeze_alpha"]], "freeze_alpha() (decomon.layers.decomon_layers.decomonconv2d method)": [[5, "decomon.layers.decomon_layers.DecomonConv2D.freeze_alpha"]], "freeze_alpha() (decomon.layers.decomon_layers.decomondense method)": [[5, "decomon.layers.decomon_layers.DecomonDense.freeze_alpha"]], "freeze_weights() (decomon.layers.core.decomonlayer method)": [[5, "decomon.layers.core.DecomonLayer.freeze_weights"]], "freeze_weights() (decomon.layers.decomon_layers.decomonconv2d method)": [[5, "decomon.layers.decomon_layers.DecomonConv2D.freeze_weights"]], "freeze_weights() (decomon.layers.decomon_layers.decomondense method)": [[5, "decomon.layers.decomon_layers.DecomonDense.freeze_weights"]], "get() (in module decomon.layers.activations)": [[5, "decomon.layers.activations.get"]], "get_backward_weights() (decomon.layers.decomon_layers.decomonconv2d method)": [[5, "decomon.layers.decomon_layers.DecomonConv2D.get_backward_weights"]], "get_coeff_grad() (in module decomon.layers.utils)": [[5, "decomon.layers.utils.get_coeff_grad"]], "get_grad() (in module decomon.layers.utils)": [[5, "decomon.layers.utils.get_grad"]], "get_linear() (decomon.layers.core.decomonlayer method)": [[5, "decomon.layers.core.DecomonLayer.get_linear"]], "get_linear() (decomon.layers.decomon_layers.decomondense method)": [[5, "decomon.layers.decomon_layers.DecomonDense.get_linear"]], "get_linear() (decomon.layers.decomon_layers.decomoninputlayer method)": [[5, "decomon.layers.decomon_layers.DecomonInputLayer.get_linear"]], "get_start_point() (in module decomon.layers.utils)": [[5, "decomon.layers.utils.get_start_point"]], "grad_descent() (in module decomon.layers.utils)": [[5, "decomon.layers.utils.grad_descent"]], "grad_descent_conv() (in module decomon.layers.utils)": [[5, "decomon.layers.utils.grad_descent_conv"]], "group_sort_2() (in module decomon.layers.activations)": [[5, "decomon.layers.activations.group_sort_2"]], "hard_sigmoid() (in module decomon.layers.activations)": [[5, "decomon.layers.activations.hard_sigmoid"]], "join() (decomon.layers.core.decomonlayer method)": [[5, "decomon.layers.core.DecomonLayer.join"]], "lagrangian (decomon.layers.core.option attribute)": [[5, "decomon.layers.core.Option.lagrangian"]], "linear() (in module decomon.layers.activations)": [[5, "decomon.layers.activations.linear"]], "linear_hull_s_shape() (in module decomon.layers.activations)": [[5, "decomon.layers.activations.linear_hull_s_shape"]], "linear_to_softmax() (in module decomon.layers.utils)": [[5, "decomon.layers.utils.linear_to_softmax"]], "log() (in module decomon.layers.utils)": [[5, "decomon.layers.utils.log"]], "max_() (in module decomon.layers.utils)": [[5, "decomon.layers.utils.max_"]], "milp (decomon.layers.core.option attribute)": [[5, "decomon.layers.core.Option.milp"]], "min_() (in module decomon.layers.utils)": [[5, "decomon.layers.utils.min_"]], "multiply() (in module decomon.layers.utils)": [[5, "decomon.layers.utils.multiply"]], "multiply_old() (in module decomon.layers.utils)": [[5, "decomon.layers.utils.multiply_old"]], "name (decomon.layers.core.ball attribute)": [[5, "decomon.layers.core.Ball.name"]], "name (decomon.layers.core.box attribute)": [[5, "decomon.layers.core.Box.name"]], "name (decomon.layers.core.deel_lip attribute)": [[5, "decomon.layers.core.DEEL_LIP.name"]], "name (decomon.layers.core.f_forward attribute)": [[5, "decomon.layers.core.F_FORWARD.name"]], "name (decomon.layers.core.f_hybrid attribute)": [[5, "decomon.layers.core.F_HYBRID.name"]], "name (decomon.layers.core.f_ibp attribute)": [[5, "decomon.layers.core.F_IBP.name"]], "name (decomon.layers.core.grid attribute)": [[5, "decomon.layers.core.Grid.name"]], "name (decomon.layers.core.vertex attribute)": [[5, "decomon.layers.core.Vertex.name"]], "permute_dimensions() (in module decomon.layers.utils)": [[5, "decomon.layers.utils.permute_dimensions"]], "pow() (in module decomon.layers.utils)": [[5, "decomon.layers.utils.pow"]], "relu() (in module decomon.layers.activations)": [[5, "decomon.layers.activations.relu"]], "reset_finetuning() (decomon.layers.core.decomonlayer method)": [[5, "decomon.layers.core.DecomonLayer.reset_finetuning"]], "reset_finetuning() (decomon.layers.decomon_layers.decomonactivation method)": [[5, "decomon.layers.decomon_layers.DecomonActivation.reset_finetuning"]], "reset_finetuning() (decomon.layers.decomon_layers.decomonconv2d method)": [[5, "decomon.layers.decomon_layers.DecomonConv2D.reset_finetuning"]], "reset_finetuning() (decomon.layers.decomon_layers.decomondense method)": [[5, "decomon.layers.decomon_layers.DecomonDense.reset_finetuning"]], "reset_layer() (decomon.layers.core.decomonlayer method)": [[5, "decomon.layers.core.DecomonLayer.reset_layer"]], "reset_layer() (decomon.layers.decomon_layers.decomonbatchnormalization method)": [[5, "decomon.layers.decomon_layers.DecomonBatchNormalization.reset_layer"]], "reset_layer() (decomon.layers.decomon_layers.decomonconv2d method)": [[5, "decomon.layers.decomon_layers.DecomonConv2D.reset_layer"]], "reset_layer() (decomon.layers.decomon_layers.decomondense method)": [[5, "decomon.layers.decomon_layers.DecomonDense.reset_layer"]], "reset_layer() (decomon.layers.deel_lip.decomongroupsort2 method)": [[5, "decomon.layers.deel_lip.DecomonGroupSort2.reset_layer"]], "selu() (in module decomon.layers.activations)": [[5, "decomon.layers.activations.selu"]], "set_back_bounds() (decomon.layers.core.decomonlayer method)": [[5, "decomon.layers.core.DecomonLayer.set_back_bounds"]], "set_back_bounds() (decomon.layers.decomon_layers.decomondense method)": [[5, "decomon.layers.decomon_layers.DecomonDense.set_back_bounds"]], "set_linear() (decomon.layers.core.decomonlayer method)": [[5, "decomon.layers.core.DecomonLayer.set_linear"]], "set_linear() (decomon.layers.decomon_layers.decomonconv2d method)": [[5, "decomon.layers.decomon_layers.DecomonConv2D.set_linear"]], "set_linear() (decomon.layers.decomon_layers.decomondense method)": [[5, "decomon.layers.decomon_layers.DecomonDense.set_linear"]], "shared_weights() (decomon.layers.core.decomonlayer method)": [[5, "decomon.layers.core.DecomonLayer.shared_weights"]], "shared_weights() (decomon.layers.decomon_layers.decomonconv2d method)": [[5, "decomon.layers.decomon_layers.DecomonConv2D.shared_weights"]], "shared_weights() (decomon.layers.decomon_layers.decomondense method)": [[5, "decomon.layers.decomon_layers.DecomonDense.shared_weights"]], "sigmoid() (in module decomon.layers.activations)": [[5, "decomon.layers.activations.sigmoid"]], "softmax() (in module decomon.layers.activations)": [[5, "decomon.layers.activations.softmax"]], "softmax_to_linear() (in module decomon.layers.utils)": [[5, "decomon.layers.utils.softmax_to_linear"]], "softplus() (in module decomon.layers.activations)": [[5, "decomon.layers.activations.softplus"]], "softplus_() (in module decomon.layers.utils)": [[5, "decomon.layers.utils.softplus_"]], "softsign() (in module decomon.layers.activations)": [[5, "decomon.layers.activations.softsign"]], "sort() (in module decomon.layers.utils)": [[5, "decomon.layers.utils.sort"]], "split() (in module decomon.layers.utils)": [[5, "decomon.layers.utils.split"]], "split_kwargs() (decomon.layers.core.decomonlayer method)": [[5, "decomon.layers.core.DecomonLayer.split_kwargs"]], "sum() (in module decomon.layers.utils)": [[5, "decomon.layers.utils.sum"]], "tanh() (in module decomon.layers.activations)": [[5, "decomon.layers.activations.tanh"]], "to_monotonic() (in module decomon.layers.decomon_layers)": [[5, "decomon.layers.decomon_layers.to_monotonic"]], "to_monotonic_merge() (in module decomon.layers.decomon_merge_layers)": [[5, "decomon.layers.decomon_merge_layers.to_monotonic_merge"]], "unfreeze_alpha() (decomon.layers.core.decomonlayer method)": [[5, "decomon.layers.core.DecomonLayer.unfreeze_alpha"]], "unfreeze_alpha() (decomon.layers.decomon_layers.decomonactivation method)": [[5, "decomon.layers.decomon_layers.DecomonActivation.unfreeze_alpha"]], "unfreeze_alpha() (decomon.layers.decomon_layers.decomonconv2d method)": [[5, "decomon.layers.decomon_layers.DecomonConv2D.unfreeze_alpha"]], "unfreeze_alpha() (decomon.layers.decomon_layers.decomondense method)": [[5, "decomon.layers.decomon_layers.DecomonDense.unfreeze_alpha"]], "unfreeze_weights() (decomon.layers.core.decomonlayer method)": [[5, "decomon.layers.core.DecomonLayer.unfreeze_weights"]], "unfreeze_weights() (decomon.layers.decomon_layers.decomonconv2d method)": [[5, "decomon.layers.decomon_layers.DecomonConv2D.unfreeze_weights"]], "unfreeze_weights() (decomon.layers.decomon_layers.decomondense method)": [[5, "decomon.layers.decomon_layers.DecomonDense.unfreeze_weights"]], "check_compatibility_data_format() (in module decomon.loading.load_onnx)": [[6, "decomon.loading.load_onnx.check_compatibility_data_format"]], "clone() (in module decomon.loading.load_onnx)": [[6, "decomon.loading.load_onnx.clone"]], "clone_first_2_last() (in module decomon.loading.load_onnx)": [[6, "decomon.loading.load_onnx.clone_first_2_last"]], "decomon.loading": [[6, "module-decomon.loading"]], "decomon.loading.load_onnx": [[6, "module-decomon.loading.load_onnx"]], "get_all_input_names() (in module decomon.loading.load_onnx)": [[6, "decomon.loading.load_onnx.get_all_input_names"]], "get_data_format() (in module decomon.loading.load_onnx)": [[6, "decomon.loading.load_onnx.get_data_format"]], "get_input_transpose() (in module decomon.loading.load_onnx)": [[6, "decomon.loading.load_onnx.get_input_transpose"]], "get_parents_format_() (in module decomon.loading.load_onnx)": [[6, "decomon.loading.load_onnx.get_parents_format_"]], "get_tensor_input() (in module decomon.loading.load_onnx)": [[6, "decomon.loading.load_onnx.get_tensor_input"]], "load_onnx_2_keras() (in module decomon.loading.load_onnx)": [[6, "decomon.loading.load_onnx.load_onnx_2_keras"]], "update_dico() (in module decomon.loading.load_onnx)": [[6, "decomon.loading.load_onnx.update_dico"]], "adversarial_check (class in decomon.metrics.metric)": [[7, "decomon.metrics.metric.Adversarial_check"]], "adversarial_score (class in decomon.metrics.metric)": [[7, "decomon.metrics.metric.Adversarial_score"]], "decomonlossfusion (class in decomon.metrics.loss)": [[7, "decomon.metrics.loss.DecomonLossFusion"]], "decomonradiusrobust (class in decomon.metrics.loss)": [[7, "decomon.metrics.loss.DecomonRadiusRobust"]], "upper_score (class in decomon.metrics.metric)": [[7, "decomon.metrics.metric.Upper_score"]], "build_asymptotic_crossentropy_model() (in module decomon.metrics.loss)": [[7, "decomon.metrics.loss.build_asymptotic_crossentropy_model"]], "build_crossentropy_model() (in module decomon.metrics.loss)": [[7, "decomon.metrics.loss.build_crossentropy_model"]], "build_formal_adv_check_model() (in module decomon.metrics.metric)": [[7, "decomon.metrics.metric.build_formal_adv_check_model"]], "build_formal_adv_model() (in module decomon.metrics.metric)": [[7, "decomon.metrics.metric.build_formal_adv_model"]], "build_formal_upper_model() (in module decomon.metrics.metric)": [[7, "decomon.metrics.metric.build_formal_upper_model"]], "build_radius_robust_model() (in module decomon.metrics.loss)": [[7, "decomon.metrics.loss.build_radius_robust_model"]], "call() (decomon.metrics.loss.decomonlossfusion method)": [[7, "decomon.metrics.loss.DecomonLossFusion.call"]], "call() (decomon.metrics.loss.decomonradiusrobust method)": [[7, "decomon.metrics.loss.DecomonRadiusRobust.call"]], "call() (decomon.metrics.metric.adversarial_check method)": [[7, "decomon.metrics.metric.Adversarial_check.call"]], "call() (decomon.metrics.metric.adversarial_score method)": [[7, "decomon.metrics.metric.Adversarial_score.call"]], "call() (decomon.metrics.metric.upper_score method)": [[7, "decomon.metrics.metric.Upper_score.call"]], "call_backward() (decomon.metrics.loss.decomonlossfusion method)": [[7, "decomon.metrics.loss.DecomonLossFusion.call_backward"]], "call_backward() (decomon.metrics.loss.decomonradiusrobust method)": [[7, "decomon.metrics.loss.DecomonRadiusRobust.call_backward"]], "call_no_backward() (decomon.metrics.loss.decomonlossfusion method)": [[7, "decomon.metrics.loss.DecomonLossFusion.call_no_backward"]], "call_no_backward() (decomon.metrics.loss.decomonradiusrobust method)": [[7, "decomon.metrics.loss.DecomonRadiusRobust.call_no_backward"]], "categorical_cross_entropy() (in module decomon.metrics.utils)": [[7, "decomon.metrics.utils.categorical_cross_entropy"]], "compute_output_shape() (decomon.metrics.loss.decomonlossfusion method)": [[7, "decomon.metrics.loss.DecomonLossFusion.compute_output_shape"]], "compute_output_shape() (decomon.metrics.loss.decomonradiusrobust method)": [[7, "decomon.metrics.loss.DecomonRadiusRobust.compute_output_shape"]], "decomon.metrics": [[7, "module-decomon.metrics"]], "decomon.metrics.complexity": [[7, "module-decomon.metrics.complexity"]], "decomon.metrics.coverage": [[7, "module-decomon.metrics.coverage"]], "decomon.metrics.loss": [[7, "module-decomon.metrics.loss"]], "decomon.metrics.metric": [[7, "module-decomon.metrics.metric"]], "decomon.metrics.utils": [[7, "module-decomon.metrics.utils"]], "get_adv_coverage_box() (in module decomon.metrics.coverage)": [[7, "decomon.metrics.coverage.get_adv_coverage_box"]], "get_adv_loss() (in module decomon.metrics.loss)": [[7, "decomon.metrics.loss.get_adv_loss"]], "get_graph_complexity() (in module decomon.metrics.complexity)": [[7, "decomon.metrics.complexity.get_graph_complexity"]], "get_lower_loss() (in module decomon.metrics.loss)": [[7, "decomon.metrics.loss.get_lower_loss"]], "get_model() (in module decomon.metrics.loss)": [[7, "decomon.metrics.loss.get_model"]], "get_upper_loss() (in module decomon.metrics.loss)": [[7, "decomon.metrics.loss.get_upper_loss"]], "linear_adv() (decomon.metrics.metric.adversarial_check method)": [[7, "decomon.metrics.metric.Adversarial_check.linear_adv"]], "linear_adv() (decomon.metrics.metric.adversarial_score method)": [[7, "decomon.metrics.metric.Adversarial_score.linear_adv"]], "linear_upper() (decomon.metrics.metric.upper_score method)": [[7, "decomon.metrics.metric.Upper_score.linear_upper"]], "backward_feed (class in decomon.models.convert)": [[8, "decomon.models.convert.BACKWARD_FEED"]], "backward (class in decomon.models.decomon_sequential)": [[8, "decomon.models.decomon_sequential.Backward"]], "backward (class in decomon.models.models)": [[8, "decomon.models.models.Backward"]], "crown (class in decomon.models.convert)": [[8, "decomon.models.convert.CROWN"]], "crown_forward (class in decomon.models.convert)": [[8, "decomon.models.convert.CROWN_FORWARD"]], "crown_hybrid (class in decomon.models.convert)": [[8, "decomon.models.convert.CROWN_HYBRID"]], "crown_ibp (class in decomon.models.convert)": [[8, "decomon.models.convert.CROWN_IBP"]], "decomonmodel (class in decomon.models.decomon_sequential)": [[8, "decomon.models.decomon_sequential.DecomonModel"]], "decomonmodel (class in decomon.models.models)": [[8, "decomon.models.models.DecomonModel"]], "decomonsequential (class in decomon.models.decomon_sequential)": [[8, "decomon.models.decomon_sequential.DecomonSequential"]], "decomonsequential (class in decomon.models.models)": [[8, "decomon.models.models.DecomonSequential"]], "forward (class in decomon.models.convert)": [[8, "decomon.models.convert.FORWARD"]], "forward_feed (class in decomon.models.convert)": [[8, "decomon.models.convert.FORWARD_FEED"]], "forward (class in decomon.models.decomon_sequential)": [[8, "decomon.models.decomon_sequential.Forward"]], "forward (class in decomon.models.models)": [[8, "decomon.models.models.Forward"]], "hybrid (class in decomon.models.convert)": [[8, "decomon.models.convert.HYBRID"]], "ibp (class in decomon.models.convert)": [[8, "decomon.models.convert.IBP"]], "check_input_tensors_functionnal() (in module decomon.models.utils)": [[8, "decomon.models.utils.check_input_tensors_functionnal"]], "check_input_tensors_sequential() (in module decomon.models.utils)": [[8, "decomon.models.utils.check_input_tensors_sequential"]], "clone() (in module decomon.models.convert)": [[8, "decomon.models.convert.clone"]], "clone() (in module decomon.models.decomon_sequential)": [[8, "decomon.models.decomon_sequential.clone"]], "clone_functional_model() (in module decomon.models.decomon_sequential)": [[8, "decomon.models.decomon_sequential.clone_functional_model"]], "clone_sequential_model() (in module decomon.models.decomon_sequential)": [[8, "decomon.models.decomon_sequential.clone_sequential_model"]], "convert() (in module decomon.models.convert)": [[8, "decomon.models.convert.convert"]], "convert() (in module decomon.models.decomon_sequential)": [[8, "decomon.models.decomon_sequential.convert"]], "convert_2_mode() (in module decomon.models.utils)": [[8, "decomon.models.utils.convert_2_mode"]], "convert_backward_2_mode() (in module decomon.models.backward_cloning)": [[8, "decomon.models.backward_cloning.convert_backward_2_mode"]], "convert_backward_model() (in module decomon.models.backward_cloning)": [[8, "decomon.models.backward_cloning.convert_backward_model"]], "convert_forward() (in module decomon.models.forward_cloning)": [[8, "decomon.models.forward_cloning.convert_forward"]], "convert_forward_functional_model() (in module decomon.models.forward_cloning)": [[8, "decomon.models.forward_cloning.convert_forward_functional_model"]], "convert_to_backward_bounds() (in module decomon.models.utils)": [[8, "decomon.models.utils.convert_to_backward_bounds"]], "crown_() (in module decomon.models.backward_cloning)": [[8, "decomon.models.backward_cloning.crown_"]], "crown_model() (in module decomon.models.backward_cloning)": [[8, "decomon.models.backward_cloning.crown_model"]], "decomon.models": [[8, "module-decomon.models"]], "decomon.models.backward_cloning": [[8, "module-decomon.models.backward_cloning"]], "decomon.models.convert": [[8, "module-decomon.models.convert"]], "decomon.models.decomon_sequential": [[8, "module-decomon.models.decomon_sequential"]], "decomon.models.forward_cloning": [[8, "module-decomon.models.forward_cloning"]], "decomon.models.models": [[8, "module-decomon.models.models"]], "decomon.models.utils": [[8, "module-decomon.models.utils"]], "freeze_alpha() (decomon.models.decomon_sequential.decomonmodel method)": [[8, "decomon.models.decomon_sequential.DecomonModel.freeze_alpha"]], "freeze_alpha() (decomon.models.decomon_sequential.decomonsequential method)": [[8, "decomon.models.decomon_sequential.DecomonSequential.freeze_alpha"]], "freeze_alpha() (decomon.models.models.decomonmodel method)": [[8, "decomon.models.models.DecomonModel.freeze_alpha"]], "freeze_alpha() (decomon.models.models.decomonsequential method)": [[8, "decomon.models.models.DecomonSequential.freeze_alpha"]], "freeze_weights() (decomon.models.decomon_sequential.decomonmodel method)": [[8, "decomon.models.decomon_sequential.DecomonModel.freeze_weights"]], "freeze_weights() (decomon.models.decomon_sequential.decomonsequential method)": [[8, "decomon.models.decomon_sequential.DecomonSequential.freeze_weights"]], "freeze_weights() (decomon.models.models.decomonmodel method)": [[8, "decomon.models.models.DecomonModel.freeze_weights"]], "freeze_weights() (decomon.models.models.decomonsequential method)": [[8, "decomon.models.models.DecomonSequential.freeze_weights"]], "fuse_forward_backward() (in module decomon.models.utils)": [[8, "decomon.models.utils.fuse_forward_backward"]], "get_forward() (in module decomon.models.utils)": [[8, "decomon.models.utils.get_FORWARD"]], "get_ibp() (in module decomon.models.utils)": [[8, "decomon.models.utils.get_IBP"]], "get_back_bounds_model() (in module decomon.models.utils)": [[8, "decomon.models.utils.get_back_bounds_model"]], "get_backward() (in module decomon.models.decomon_sequential)": [[8, "decomon.models.decomon_sequential.get_backward"]], "get_backward_layer() (in module decomon.models.decomon_sequential)": [[8, "decomon.models.decomon_sequential.get_backward_layer"]], "get_backward_model() (in module decomon.models.backward_cloning)": [[8, "decomon.models.backward_cloning.get_backward_model"]], "get_backward_model() (in module decomon.models.decomon_sequential)": [[8, "decomon.models.decomon_sequential.get_backward_model"]], "get_backward_model_() (in module decomon.models.decomon_sequential)": [[8, "decomon.models.decomon_sequential.get_backward_model_"]], "get_depth_dict() (in module decomon.models.utils)": [[8, "decomon.models.utils.get_depth_dict"]], "get_direction() (in module decomon.models.convert)": [[8, "decomon.models.convert.get_direction"]], "get_disconnected_input() (in module decomon.models.backward_cloning)": [[8, "decomon.models.backward_cloning.get_disconnected_input"]], "get_fuse() (in module decomon.models.backward_cloning)": [[8, "decomon.models.backward_cloning.get_fuse"]], "get_ibp_forward_from_method() (in module decomon.models.convert)": [[8, "decomon.models.convert.get_ibp_forward_from_method"]], "get_inner_layers() (in module decomon.models.utils)": [[8, "decomon.models.utils.get_inner_layers"]], "get_input() (in module decomon.models.backward_cloning)": [[8, "decomon.models.backward_cloning.get_input"]], "get_input_dim() (in module decomon.models.utils)": [[8, "decomon.models.utils.get_input_dim"]], "get_input_nodes() (in module decomon.models.backward_cloning)": [[8, "decomon.models.backward_cloning.get_input_nodes"]], "get_input_tensor_x() (in module decomon.models.utils)": [[8, "decomon.models.utils.get_input_tensor_x"]], "get_inputs() (in module decomon.models.utils)": [[8, "decomon.models.utils.get_inputs"]], "get_key() (in module decomon.models.utils)": [[8, "decomon.models.utils.get_key"]], "get_mode() (in module decomon.models.utils)": [[8, "decomon.models.utils.get_mode"]], "get_node_by_id() (in module decomon.models.utils)": [[8, "decomon.models.utils.get_node_by_id"]], "get_node_by_id_() (in module decomon.models.utils)": [[8, "decomon.models.utils.get_node_by_id_"]], "get_original_layer_name() (in module decomon.models.utils)": [[8, "decomon.models.utils.get_original_layer_name"]], "include_dim_layer_fn() (in module decomon.models.decomon_sequential)": [[8, "decomon.models.decomon_sequential.include_dim_layer_fn"]], "include_dim_layer_fn() (in module decomon.models.utils)": [[8, "decomon.models.utils.include_dim_layer_fn"]], "is_purely_linear() (in module decomon.models.backward_cloning)": [[8, "decomon.models.backward_cloning.is_purely_linear"]], "name (decomon.models.convert.backward_feed attribute)": [[8, "decomon.models.convert.BACKWARD_FEED.name"]], "name (decomon.models.convert.crown attribute)": [[8, "decomon.models.convert.CROWN.name"]], "name (decomon.models.convert.crown_forward attribute)": [[8, "decomon.models.convert.CROWN_FORWARD.name"]], "name (decomon.models.convert.crown_hybrid attribute)": [[8, "decomon.models.convert.CROWN_HYBRID.name"]], "name (decomon.models.convert.crown_ibp attribute)": [[8, "decomon.models.convert.CROWN_IBP.name"]], "name (decomon.models.convert.forward attribute)": [[8, "decomon.models.convert.FORWARD.name"]], "name (decomon.models.convert.forward_feed attribute)": [[8, "decomon.models.convert.FORWARD_FEED.name"]], "name (decomon.models.convert.hybrid attribute)": [[8, "decomon.models.convert.HYBRID.name"]], "name (decomon.models.convert.ibp attribute)": [[8, "decomon.models.convert.IBP.name"]], "name (decomon.models.decomon_sequential.backward attribute)": [[8, "decomon.models.decomon_sequential.Backward.name"]], "name (decomon.models.decomon_sequential.forward attribute)": [[8, "decomon.models.decomon_sequential.Forward.name"]], "name (decomon.models.models.backward attribute)": [[8, "decomon.models.models.Backward.name"]], "name (decomon.models.models.forward attribute)": [[8, "decomon.models.models.Forward.name"]], "pre_process_inputs() (in module decomon.models.utils)": [[8, "decomon.models.utils.pre_process_inputs"]], "reset_finetuning() (decomon.models.decomon_sequential.decomonmodel method)": [[8, "decomon.models.decomon_sequential.DecomonModel.reset_finetuning"]], "reset_finetuning() (decomon.models.decomon_sequential.decomonsequential method)": [[8, "decomon.models.decomon_sequential.DecomonSequential.reset_finetuning"]], "reset_finetuning() (decomon.models.models.decomonmodel method)": [[8, "decomon.models.models.DecomonModel.reset_finetuning"]], "reset_finetuning() (decomon.models.models.decomonsequential method)": [[8, "decomon.models.models.DecomonSequential.reset_finetuning"]], "retrieve_layer() (in module decomon.models.backward_cloning)": [[8, "decomon.models.backward_cloning.retrieve_layer"]], "set_domain() (decomon.models.decomon_sequential.decomonmodel method)": [[8, "decomon.models.decomon_sequential.DecomonModel.set_domain"]], "set_domain() (decomon.models.decomon_sequential.decomonsequential method)": [[8, "decomon.models.decomon_sequential.DecomonSequential.set_domain"]], "set_domain() (decomon.models.models.decomonmodel method)": [[8, "decomon.models.models.DecomonModel.set_domain"]], "set_domain() (decomon.models.models.decomonsequential method)": [[8, "decomon.models.models.DecomonSequential.set_domain"]], "set_domain_priv() (in module decomon.models.decomon_sequential)": [[8, "decomon.models.decomon_sequential.set_domain_priv"]], "set_domain_priv() (in module decomon.models.models)": [[8, "decomon.models.models.set_domain_priv"]], "set_name() (in module decomon.models.utils)": [[8, "decomon.models.utils.set_name"]], "switch_mode_mapping() (in module decomon.models.convert)": [[8, "decomon.models.convert.switch_mode_mapping"]], "unfreeze_alpha() (decomon.models.decomon_sequential.decomonmodel method)": [[8, "decomon.models.decomon_sequential.DecomonModel.unfreeze_alpha"]], "unfreeze_alpha() (decomon.models.decomon_sequential.decomonsequential method)": [[8, "decomon.models.decomon_sequential.DecomonSequential.unfreeze_alpha"]], "unfreeze_alpha() (decomon.models.models.decomonmodel method)": [[8, "decomon.models.models.DecomonModel.unfreeze_alpha"]], "unfreeze_alpha() (decomon.models.models.decomonsequential method)": [[8, "decomon.models.models.DecomonSequential.unfreeze_alpha"]], "unfreeze_weights() (decomon.models.decomon_sequential.decomonmodel method)": [[8, "decomon.models.decomon_sequential.DecomonModel.unfreeze_weights"]], "unfreeze_weights() (decomon.models.decomon_sequential.decomonsequential method)": [[8, "decomon.models.decomon_sequential.DecomonSequential.unfreeze_weights"]], "unfreeze_weights() (decomon.models.models.decomonmodel method)": [[8, "decomon.models.models.DecomonModel.unfreeze_weights"]], "unfreeze_weights() (decomon.models.models.decomonsequential method)": [[8, "decomon.models.models.DecomonSequential.unfreeze_weights"]], "decomon.types": [[9, "module-decomon.types"]]}})